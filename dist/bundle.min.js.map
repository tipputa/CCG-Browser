{"version":3,"file":"bundle.min.js","sources":["../src/utils/color.js","../src/utils/myUnderscore.js","../src/utils/sequence.js","../src/utils/selector.js","../src/utils/download.js","../src/sequenceAlignment/option.js","../src/utils/canvas.js","../src/sequenceAlignment/multipleSequenceAlignment.js","../src/circularBrowser/option.js","../src/circularBrowser/circularGenomeBrowser.js","../src/linearBrowser/option.js","../src/linearBrowser/linearGenomeBrowser.js","../src/utils/fetch.js"],"sourcesContent":["// colors: https://github.com/wilzbach/msa-colorschemes/tree/master/src\r\nexport const CLUSTAL2_COLOR = {\r\n    A: \"#80a0f0\",\r\n    R: \"#f01505\",\r\n    N: \"#00ff00\",\r\n    D: \"#c048c0\",\r\n    C: \"#f08080\",\r\n    Q: \"#00ff00\",\r\n    E: \"#c048c0\",\r\n    G: \"#f09048\",\r\n    H: \"#15a4a4\",\r\n    I: \"#80a0f0\",\r\n    L: \"#80a0f0\",\r\n    K: \"#f01505\",\r\n    M: \"#80a0f0\",\r\n    F: \"#80a0f0\",\r\n    P: \"#ffff00\",\r\n    S: \"#00ff00\",\r\n    T: \"#00ff00\",\r\n    W: \"#80a0f0\",\r\n    Y: \"#15a4a4\",\r\n    V: \"#80a0f0\",\r\n    B: \"#fff\",\r\n    X: \"#fff\",\r\n    Z: \"#fff\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\n\r\nexport const STRAND_COLOR = {\r\n    A: \"#5858a7\",\r\n    R: \"#6b6b94\",\r\n    N: \"#64649b\",\r\n    D: \"#2121de\",\r\n    C: \"#9d9d62\",\r\n    Q: \"#8c8c73\",\r\n    E: \"#0000ff\",\r\n    G: \"#4949b6\",\r\n    H: \"#60609f\",\r\n    I: \"#ecec13\",\r\n    L: \"#b2b24d\",\r\n    K: \"#4747b8\",\r\n    M: \"#82827d\",\r\n    F: \"#c2c23d\",\r\n    P: \"#2323dc\",\r\n    S: \"#4949b6\",\r\n    T: \"#9d9d62\",\r\n    W: \"#c0c03f\",\r\n    Y: \"#d3d32c\",\r\n    V: \"#ffff00\",\r\n    B: \"#4343bc\",\r\n    X: \"#797986\",\r\n    Z: \"#4747b8\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\nexport const TAYLOR_COLOR = {\r\n    A: \"#ccff00\",\r\n    R: \"#0000ff\",\r\n    N: \"#cc00ff\",\r\n    D: \"#ff0000\",\r\n    C: \"#ffff00\",\r\n    Q: \"#ff00cc\",\r\n    E: \"#ff0066\",\r\n    G: \"#ff9900\",\r\n    H: \"#0066ff\",\r\n    I: \"#66ff00\",\r\n    L: \"#33ff00\",\r\n    K: \"#6600ff\",\r\n    M: \"#00ff00\",\r\n    F: \"#00ff66\",\r\n    P: \"#ffcc00\",\r\n    S: \"#ff3300\",\r\n    T: \"#ff6600\",\r\n    W: \"#00ccff\",\r\n    Y: \"#00ffcc\",\r\n    V: \"#99ff00\",\r\n    B: \"#fff\",\r\n    X: \"#fff\",\r\n    Z: \"#fff\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\n\r\nconst hsvToRgb = (H, S, V) => {\r\n    // https://qiita.com/hachisukansw/items/633d1bf6baf008e82847\r\n    var C = V * S;\r\n    var Hp = H / 60;\r\n    var X = C * (1 - Math.abs(Hp % 2 - 1));\r\n\r\n    var R, G, B;\r\n    if (0 <= Hp && Hp < 1) {\r\n        [R, G, B] = [C, X, 0]\r\n    } else if (1 <= Hp && Hp < 2) {\r\n        [R, G, B] = [X, C, 0]\r\n    } else if (2 <= Hp && Hp < 3) {\r\n        [R, G, B] = [0, C, X]\r\n    } else if (3 <= Hp && Hp < 4) {\r\n        [R, G, B] = [0, X, C]\r\n    } else if (4 <= Hp && Hp < 5) {\r\n        [R, G, B] = [X, 0, C]\r\n    } else if (5 <= Hp && Hp < 6) {\r\n        [R, G, B] = [C, 0, X]\r\n    }\r\n\r\n    var m = V - C;\r\n    [R, G, B] = [R + m, G + m, B + m];\r\n\r\n    R = Math.floor(R * 255);\r\n    G = Math.floor(G * 255);\r\n    B = Math.floor(B * 255);\r\n    return [R, G, B];\r\n}\r\n\r\nconst COLER_ARR = []\r\nfor (let k = 1; k >= 0.5; k -= 0.1) {\r\n    for (let j = 1; j >= 0.5; j -= 0.25) {\r\n        for (let i = 0; i < 360; i++) {\r\n            COLER_ARR.push(\"rgb(\" + hsvToRgb(i, j, k).join(\",\") + \")\");\r\n        }\r\n    }\r\n}\r\n\r\nconst getColorPallet = (i) => {\r\n    return COLER_ARR[i * 12]\r\n}\r\n\r\nexport const getColors = (i, stepSize) => {\r\n    return COLER_ARR[i * stepSize]\r\n}\r\n\r\nconst PROTEIN_COL_V1 = {}\r\n\r\nPROTEIN_COL_V1[\"A\"] = getColorPallet(0);\r\nPROTEIN_COL_V1[\"B\"] = getColorPallet(1);\r\nPROTEIN_COL_V1[\"C\"] = getColorPallet(2);\r\nPROTEIN_COL_V1[\"D\"] = getColorPallet(3);\r\nPROTEIN_COL_V1[\"E\"] = getColorPallet(4);\r\nPROTEIN_COL_V1[\"F\"] = getColorPallet(5);\r\nPROTEIN_COL_V1[\"G\"] = getColorPallet(6);\r\nPROTEIN_COL_V1[\"H\"] = getColorPallet(7);\r\nPROTEIN_COL_V1[\"I\"] = getColorPallet(8);\r\nPROTEIN_COL_V1[\"J\"] = getColorPallet(9);\r\nPROTEIN_COL_V1[\"K\"] = getColorPallet(10);\r\nPROTEIN_COL_V1[\"L\"] = getColorPallet(11);\r\nPROTEIN_COL_V1[\"M\"] = getColorPallet(12);\r\nPROTEIN_COL_V1[\"N\"] = getColorPallet(13);\r\nPROTEIN_COL_V1[\"O\"] = getColorPallet(14);\r\nPROTEIN_COL_V1[\"P\"] = getColorPallet(15);\r\nPROTEIN_COL_V1[\"Q\"] = getColorPallet(16);\r\nPROTEIN_COL_V1[\"R\"] = getColorPallet(17);\r\nPROTEIN_COL_V1[\"S\"] = getColorPallet(18);\r\nPROTEIN_COL_V1[\"T\"] = getColorPallet(19);\r\nPROTEIN_COL_V1[\"U\"] = getColorPallet(20);\r\nPROTEIN_COL_V1[\"V\"] = getColorPallet(21);\r\nPROTEIN_COL_V1[\"W\"] = getColorPallet(22);\r\nPROTEIN_COL_V1[\"X\"] = getColorPallet(23);\r\nPROTEIN_COL_V1[\"Y\"] = getColorPallet(24);\r\nPROTEIN_COL_V1[\"Z\"] = getColorPallet(25);\r\nPROTEIN_COL_V1[\"-\"] = \"rgb(200,200,200)\";\r\n\r\nexport {\r\n    PROTEIN_COL_V1,\r\n    COLER_ARR\r\n}","// almost same functions as underscore.js\r\n// ref: https: //underscorejs.org/docs/underscore.html\r\n\r\nconst ObjProto = Object.prototype,\r\n    toString = ObjProto.toString,\r\n    hasOwnProperty = ObjProto.hasOwnProperty;\r\n\r\nconst has = function (obj, path) {\r\n    return obj != null && hasOwnProperty.call(obj, path);\r\n}\r\n\r\n\r\nconst nativeIsArray = Array.isArray,\r\n    nativeKeys = Object.keys,\r\n    nativeCreate = Object.create;\r\n\r\nconst shallowProperty = function (key) {\r\n    return function (obj) {\r\n        return obj == null ? void 0 : obj[key];\r\n    };\r\n};\r\n\r\nconst MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\nconst getLength = shallowProperty('length');\r\nconst isArrayLike = function (collection) {\r\n    const length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n};\r\n\r\nconst optimizeCb = function (func, context, argCount) {\r\n    if (context === void 0) return func;\r\n    switch (argCount == null ? 3 : argCount) {\r\n        case 1:\r\n            return function (value) {\r\n                return func.call(context, value);\r\n            };\r\n        case 3:\r\n            return function (value, index, collection) {\r\n                console.log(context);\r\n                return func.call(context, value, index, collection);\r\n            };\r\n        case 4:\r\n            return function (accumulator, value, index, collection) {\r\n                return func.call(context, accumulator, value, index, collection);\r\n            };\r\n    }\r\n    return function () {\r\n        return func.apply(context, arguments);\r\n    };\r\n};\r\n\r\nconst isObject = function (obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n};\r\n\r\nconst getKeys = function (obj) {\r\n    if (!isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj)\r\n        if (has(obj, key)) keys.push(key);\r\n\r\n    return keys;\r\n};\r\n\r\n\r\nexport const each = function (obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n        for (i = 0, length = obj.length; i < length; i++) {\r\n            iteratee(obj[i], i, obj);\r\n        }\r\n    } else {\r\n        const keys = getKeys(obj);\r\n        for (i = 0, length = keys.length; i < length; i++) {\r\n            iteratee(obj[keys[i]], keys[i], obj);\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n\r\nconst group = function (behavior, partition) {\r\n    return function (obj, iteratee, context) {\r\n        var result = partition ? [\r\n            [],\r\n            []\r\n        ] : {};\r\n        iteratee = optimizeCb(iteratee, context);\r\n        each(obj, function (value, index) {\r\n            var key = iteratee(value, index, obj);\r\n            behavior(result, value, key);\r\n        });\r\n        return result;\r\n    };\r\n};\r\n\r\nexport const groupBy = group(function (result, value, key) {\r\n    if (has(result, key)) result[key].push(value);\r\n    else result[key] = [value];\r\n\r\n});\r\n\r\nexport const countBy = group(function (result, value, key) {\r\n    if (has(result, key)) result[key]++;\r\n    else result[key] = 1;\r\n});\r\n\r\nexport const indexBy = group(function (result, value, key) {\r\n    result[key] = value;\r\n});","import {\r\n    each\r\n} from \"./myUnderscore\"\r\n\r\nconst seqGroup = function (behavior, numSeq) {\r\n    return function (obj, iteratee, context) {\r\n        var result = partition ? [\r\n            [],\r\n            []\r\n        ] : {};\r\n        iteratee = optimizeCb(iteratee, context);\r\n        each(obj, function (value, index) {\r\n            var key = iteratee(value, index, obj);\r\n            behavior(result, value, key);\r\n        });\r\n        return result;\r\n    };\r\n}\r\n\r\n\r\nexport const seqStat = (seqs) => {\r\n    const results = [];\r\n    const init = (len) => {\r\n        for (let i = 0; i < len; i++) {\r\n            results.push({});\r\n        }\r\n    }\r\n    const others = (seq) => {\r\n        const seqArr = seq.split(\"\");\r\n        each(seqArr, (val, i) => {\r\n            if (val in results[i]) results[i][val]++;\r\n            else results[i][val] = 1;\r\n        });\r\n    }\r\n\r\n    init(seqs[0].seq.length);\r\n    each(seqs, (val) => {\r\n        others(val.seq);\r\n    });\r\n\r\n    return results\r\n}\r\n\r\nexport const isConservedRegoin = (seqArr) => {\r\n    const conserved = []\r\n    each(seqArr, (val) => {\r\n        if (val.hasOwnProperty(\"-\")) {\r\n            conserved.push(false);\r\n        } else {\r\n            conserved.push(true);\r\n        }\r\n    });\r\n    return conserved;\r\n}\r\n\r\nexport const conservedRegionLength = (seqArr) => {\r\n    let counter = 0;\r\n    each(seqArr, (val) => {\r\n        if (!val.hasOwnProperty(\"-\")) {\r\n            counter++;\r\n        }\r\n    });\r\n    return counter;\r\n}\r\n\r\nexport const calcGapRate = (seqArr, numSeq) => {\r\n    let res = [];\r\n    each(seqArr, (val) => {\r\n        if (val.hasOwnProperty(\"-\")) {\r\n            res.push(val[\"-\"] / numSeq);\r\n        } else res.push(0);\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const calcShannonEntropy = (seqArr, numSeq) => {\r\n    const results = [];\r\n    each(seqArr, (seqs) => {\r\n        const res = {}\r\n        let s = 0;\r\n        each(seqs, (val, key) => {\r\n            const v = -1 * val / numSeq * Math.log2(val / numSeq);\r\n            res[key] = v;\r\n            s += v;\r\n        })\r\n        res[\"Entropy\"] = Math.log2(22) - s;\r\n        each(res, (val, key) => {\r\n            if (key !== \"Entropy\") {\r\n                res[key] = res[\"Entropy\"] * seqs[key] / numSeq;\r\n            }\r\n        });\r\n        results.push(res);\r\n    });\r\n    return results;\r\n}\r\n/**\r\n * return {sum: totalHeight, res: {name: letter, value: letterHeight}}\r\n * @param {*} entropyArr \r\n */\r\nexport const filterAndSortEntroy = (entropyArr) => {\r\n    const res = [];\r\n    const buf = {}\r\n    let s = 0;\r\n    each(entropyArr, (val, key) => {\r\n        if (val > 0.1 && key !== \"Entropy\") {\r\n            res.push({\r\n                name: key,\r\n                value: val\r\n            });\r\n            s += val;\r\n        }\r\n    });\r\n    res.sort((a, b) => {\r\n        return b.value - a.value;\r\n    })\r\n    buf[\"sum\"] = s;\r\n    buf[\"res\"] = res;\r\n    return buf;\r\n}\r\n\r\nexport const getTrueArr = (resourceArr, booleanArr) => {\r\n    const res = [];\r\n    if (resourceArr.length !== booleanArr.length) {\r\n        console.log(\"not match: \" + resourceArr.length + \" \" + booleanArr.length);\r\n        return res;\r\n    }\r\n    each(resourceArr, (val, i) => {\r\n        if (booleanArr[i]) res.push(val);\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const getAllSequenceAsFasta = (sequenceObj) => {\r\n    const ret = [];\r\n    each(sequenceObj, (val) => {\r\n        ret.push(\">\" + val.name);\r\n        ret.push(val.seq);\r\n    })\r\n    const result = ret.join(\"\\n\");\r\n    return result;\r\n}\r\n\r\nexport const getConservedRegionAsFasta = (sequenceObj, booleanArr) => {\r\n    const ret = [];\r\n    each(sequenceObj, (val) => {\r\n        const seqArr = getTrueArr(val.seq.split(\"\"), booleanArr);\r\n        ret.push(\">\" + val.name);\r\n        ret.push(seqArr.join(\"\"));\r\n    })\r\n    const result = ret.join(\"\\n\");\r\n    return result;\r\n}","import * as _ from \"./myUnderscore.js\";\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} elements id\r\n */\r\nclass Selector {\r\n    constructor(elements) {\r\n        this.elements = elements;\r\n        this.mouse = null;\r\n    }\r\n\r\n    on(eventType, callback, context, capture = false) {\r\n        _.each(this.elements, (el) => {\r\n            el.addEventListener(eventType, () => {\r\n                const rect = el.getBoundingClientRect();\r\n                this.mouse = [event.clientX - rect.left - el.clientLeft, event.clientY - rect.top - el.clientTop];\r\n                callback.call(context);\r\n                this.mouse = null;\r\n            }, capture);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    create(elementName) {\r\n        const elements = [];\r\n        _.each(this.elements, (el) => {\r\n            const newEle = document.createElement(elementName);\r\n            el.appendChild(newEle);\r\n            elements.push(newEle);\r\n        });\r\n        return new Selector(elements);\r\n    }\r\n\r\n    style(stylName, styleValue) {\r\n        _.each(this.elements, (el) => {\r\n            el.style.setProperty(stylName, styleValue);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    attr(attrName, attrValue) {\r\n        _.each(this.elements, (el) => {\r\n            el.setAttribute(attrName, attrValue);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    setClass(className) {\r\n        return this.attr(\"class\", className);\r\n    }\r\n\r\n    setID(idName) {\r\n        return this.attr(\"id\", idName);\r\n    }\r\n\r\n    html(text) {\r\n        if (arguments.length == 1) {\r\n            if (text) {\r\n                _.each(this.elements, (el) => {\r\n                    el.textContent = text;\r\n                });\r\n            } else {\r\n                _.each(this.elements, (el) => {\r\n                    el.textContent = text;\r\n                });\r\n                return this;\r\n            }\r\n        } else {\r\n            const res = []\r\n            _.each(this.elements, (el) => {\r\n                res.push(el.textContent);\r\n            });\r\n            if (res.length === 1) return res[0];\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} idName ID name\r\n */\r\nexport const selectID = (idName) => {\r\n    return new Selector([document.getElementById(idName)]);\r\n}\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} className class name\r\n */\r\nexport const selectClass = (className) => {\r\n    return new Selector([document.getElementsByClassName(className)]);\r\n}\r\n\r\n/**\r\n * selectID or selectClass is much fast;\r\n * @param {string} name css name\r\n */\r\nexport const select = (name) => {\r\n    return new Selector(\r\n        [document.querySelector(name)]\r\n    );\r\n}\r\n\r\n/**\r\n * selectID or selectClass is much fast;\r\n * @param {string} name css name\r\n */\r\nexport const selectAll = (name) => {\r\n    return new Selector(document.querySelectorAll(name));\r\n}","// download https://jsgao0.wordpress.com/2016/06/01/export-svg-file-using-xmlserializer/\r\nexport const generateLink = (fileName, dataPath) => {\r\n    var link = document.createElement('a'); // Create a element.\r\n    link.download = fileName; // Set value as the file name of download file.\r\n    link.href = dataPath; // Set value as the file content of download file.\r\n    return link;\r\n}\r\n\r\nexport const exportSVG = (svgElement, fileName) => {\r\n    var svg = svgElement;\r\n    var svgString;\r\n    if (window.ActiveXObject) {\r\n        svgString = svg.xml;\r\n    } else {\r\n        var oSerializer = new XMLSerializer();\r\n        svgString = oSerializer.serializeToString(svg);\r\n    }\r\n    generateLink(fileName + '.svg', 'data:image/svg+xml;utf8,' + svgString).click();\r\n}\r\n\r\nexport const exportText = (textString, fileName) => {\r\n    const blob = new Blob(\r\n        [textString], {\r\n            type: \"type/plain\"\r\n        }\r\n    );\r\n    const url = window.URL.createObjectURL(blob);\r\n    generateLink(fileName, url).click();\r\n}\r\n\r\n// replacer:  https://qiita.com/qoAop/items/57d35a41ef9629351c3c\r\nexport const exportJson = (json, fileName, replacer = null, indent = 4) => {\r\n    const blob = new Blob(\r\n        [JSON.stringify(json, replacer, indent)], {\r\n            type: \"application/json\"\r\n        }\r\n    );\r\n    const url = window.URL.createObjectURL(blob);\r\n    generateLink(fileName, url).click();\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    id: \"def\",\r\n    setSize: false,\r\n    height: 600,\r\n    width: 600,\r\n    seqHeight: 25,\r\n    isGrouping: true,\r\n    colorScheme: col.TAYLOR_COLOR,\r\n    header: {\r\n        ...size,\r\n        ...font,\r\n        height: 100,\r\n        top: 10,\r\n        enable: true,\r\n    },\r\n    seqLogo: {\r\n        enable: true,\r\n    },\r\n    nonGapRate: {\r\n        enable: true,\r\n        left: 10,\r\n        top: 10,\r\n        bottom: 0,\r\n        baseColor: \"rgb(120,120,120)\",\r\n        highColor: \"rgb(30, 30, 250)\",\r\n        th: 1,\r\n    },\r\n    label: {\r\n        ...size,\r\n        ...font,\r\n        fontSize: 13,\r\n        left: 10,\r\n        top: 0,\r\n        width: 300\r\n    },\r\n    sequence: {\r\n        ...size,\r\n        ...font,\r\n        fontSize: 12,\r\n        left: 10,\r\n        right: 10,\r\n        top: 0,\r\n        width: 480,\r\n        topMargin: 0,\r\n        bottomMargin: 0\r\n    },\r\n    scaleBar: {\r\n        ...font,\r\n        fontSize: 13,\r\n        height: 40,\r\n        enable: true,\r\n    }\r\n}","import * as color from \"./color\"\r\n\r\nconst deg90 = Math.PI / 2\r\n\r\nexport const setLineWidth = (ctx, lineWidth) => {\r\n    ctx.lineWidth = lineWidth\r\n}\r\n\r\nexport const setTextAlign = (ctx, align) => {\r\n    ctx.textAlign = align; // center\r\n}\r\n\r\nexport const setFillStyle = (ctx, fStyle) => {\r\n    ctx.fillStyle = fStyle;\r\n}\r\n\r\nexport const setStrokeStyle = (ctx, sStyle) => {\r\n    ctx.strokeStyle = sStyle;\r\n}\r\n\r\nexport const drawLine = (ctx, startX, endX, startY, endY, strokeStyle) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(startX, startY);\r\n    ctx.lineTo(endX, endY);\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.stroke();\r\n}\r\n\r\nexport const drawRect = (ctx, x, y, width, height, strokeStyle, lineWidth) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeRect(x, y, width, height);\r\n}\r\n\r\nexport const drawArc = (ctx, x, y, r, startRad, endRad, angle) => {\r\n    let val = angle < 0 ? \"rgba(200,200,200)\" : color.COLER_ARR[angle];\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, startRad - deg90, endRad - deg90);\r\n    ctx.strokeStyle = val;\r\n    ctx.stroke();\r\n}\r\n\r\nexport const drawTxt = (ctx, text, x, y, font) => {\r\n    ctx.font = font\r\n    ctx.fillText(text, x, y);\r\n}\r\n\r\nexport const clear = (ctx, width, height) => {\r\n    ctx.clearRect(0, 0, width, height);\r\n}","import {\r\n    options\r\n} from \"./option\";\r\nimport * as drawer from \"../utils/canvas\"\r\n\r\nimport * as utils from \"../utils/index\";\r\n\r\nclass AlignmentPosition {\r\n    constructor(size) {\r\n        this.start = 0;\r\n        this.end = size;\r\n        this.size = size;\r\n        this.preStart = -1;\r\n        this.preEnd = -1;\r\n    }\r\n    update(size) {\r\n        this.start = 0;\r\n        this.end = size;\r\n        this.size = size;\r\n        this.preStart = -1;\r\n        this.preEnd = -1;\r\n    }\r\n}\r\n\r\nconst getGroup = (dicArr) => {\r\n    const _group = {};\r\n    let counter = 0;\r\n    utils.each(dicArr, (val, i, arr) => {\r\n        if (val[\"group\"] in _group) {\r\n            _group[val[\"group\"]].count++;\r\n            _group[val[\"group\"]].names.push(val[\"name\"])\r\n        } else {\r\n            _group[val[\"group\"]] = {\r\n                count: 1,\r\n                col: utils.getColors(counter++, 45),\r\n                names: [val[\"name\"]]\r\n            }\r\n        }\r\n    });\r\n    return _group;\r\n}\r\n\r\n\r\n\r\nexport class Alignment {\r\n    constructor(id, opt) {\r\n        this.height = 500;\r\n        this.width = 500;\r\n        this.mainCanvas = null;\r\n        this.isDragging = false;\r\n\r\n        this.id = id;\r\n        this.container = null;\r\n        this.inputJson = null;\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n\r\n        this.numSeq = 0;\r\n        this.group = null;\r\n\r\n        this.canvasHeight = 0;\r\n        this.headerContainer = null;\r\n        this.bodyContainer = null;\r\n        this.labelContainer = null;\r\n        this.labelDiv = null;\r\n        this.canvasContainer = null;\r\n        this.ctx = null;\r\n        this.alignmentPosition = null;\r\n        this.baseWidth = 0;\r\n        this.seqLength = 0;\r\n\r\n        // sortable and highlight\r\n        this.orderedAlignments = null;\r\n        this.highlightedIndicies = null;\r\n\r\n        // conserved region mode\r\n        this.isConservedRegionMode = false;\r\n        this.conservedRegionBooleanArr = null;\r\n        this.conservedRegionLength = 0;\r\n\r\n\r\n        // seqLog & 1 - gapRate\r\n        this.headerCanvas = null;\r\n        this.headerCtx = null;\r\n        this.seqStat = null;\r\n        this.gapRate = null;\r\n        this.shannonEntropyArr = null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} elementID without # \r\n     */\r\n    setContainer(elementID) {\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.id = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {json} json \r\n     */\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numSeq = json[\"sequences\"].length;\r\n        this.canvasHeight = this.numSeq * this.options.seqHeight + 50;\r\n        this.seqLength = this.inputJson[\"sequences\"][0][\"seq\"].length;\r\n        this.alignmentPosition = new AlignmentPosition(this.seqLength);\r\n        this.seqStat = utils.seqStat(this.inputJson[\"sequences\"]);\r\n        this.conservedRegionBooleanArr = utils.isConservedRegoin(this.seqStat);\r\n        this.conservedRegionLength = utils.conservedRegionLength(this.seqStat);\r\n        this.gapRate = utils.calcGapRate(this.seqStat, this.numSeq);\r\n        this.shannonEntropyArr = utils.calcShannonEntropy(this.seqStat, this.numSeq);\r\n\r\n        // grouping\r\n        if (this.options.isGrouping) {\r\n            this.group = getGroup(this.inputJson[\"sequences\"]);\r\n            let counter = 0;\r\n            for (const key in this.group) {\r\n                const name = key;\r\n                utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                    if (val.group === key) {\r\n                        val.order = counter++;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.orderedAlignments = new Array(this.inputJson[\"sequences\"].length);\r\n        utils.each(this.inputJson[\"sequences\"], (alignment) => {\r\n            this.orderedAlignments[alignment.order] = alignment;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this.ctx = this.mainCanvas.elements[0].getContext(\"2d\");\r\n\r\n        this._initHeader();\r\n        this._drawSequenceLabel();\r\n        this.drawSequences();\r\n    }\r\n\r\n    zoomInShowSequence() {\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start < 20) return;\r\n        this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n        this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n        this.alignmentPosition.start = 0;\r\n        this.alignmentPosition.end = 30;\r\n        this.drawSequences();\r\n    }\r\n\r\n    change2conservedRegion() {\r\n        this.isConservedRegionMode = true;\r\n        this.alignmentPosition.update(this.conservedRegionLength);\r\n        this.drawSequences();\r\n    }\r\n\r\n    change2allRegion() {\r\n        this.isConservedRegionMode = false;\r\n        this.alignmentPosition.update(this.seqLength);\r\n        this.drawSequences();\r\n    }\r\n\r\n    saveRawJson() {\r\n        utils.exportJson(this.inputJson, `all_rawJson_${this.id}.json`);\r\n    }\r\n\r\n    saveAllSequence() {\r\n        utils.exportText(utils.getAllSequenceAsFasta(this.inputJson[\"sequences\"]), `all_alignments_${this.id}.fas`);\r\n    }\r\n\r\n    saveConservedRegion() {\r\n        utils.exportText(utils.getConservedRegionAsFasta(this.inputJson[\"sequences\"], this.conservedRegionBooleanArr), `conservedRegion_alignments_${this.id}.fas`);\r\n    }\r\n\r\n    saveVisualizedRegion() {\r\n        if (this.isConservedRegionMode) {\r\n            const seqs = []\r\n            utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                const conservedSeq = utils.getTrueArr(val.seq.split(\"\"), this.conservedRegionBooleanArr);\r\n                const targetSeq = conservedSeq.slice(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5)).join(\"\");\r\n                seqs.push({\r\n                    name: val.name,\r\n                    seq: targetSeq\r\n                });\r\n            });\r\n            utils.exportText(utils.getAllSequenceAsFasta(seqs), `visualizedRegion_conserved_${this.id}.fas`);\r\n\r\n        } else {\r\n            const seqs = [];\r\n            utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                const targetSeq = val.seq.substr(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5) - parseInt(this.alignmentPosition.start + 0.5));\r\n                seqs.push({\r\n                    name: val.name,\r\n                    seq: targetSeq\r\n                });\r\n            });\r\n            utils.exportText(utils.getAllSequenceAsFasta(seqs), `visualizedRegion_${this.id}.fas`);\r\n        }\r\n    }\r\n\r\n\r\n    _DOMcreate() {\r\n        this.options.sequence.width = this.width - this.options.label.width - this.options.label.left - this.options.sequence.left - this.options.sequence.right;\r\n\r\n        this.headerContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.id}_header`)\r\n        //    .html(\"Alignment Viewer Header\");\r\n\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.id}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.id}_canvasContainer`)\r\n            .style(\"position\", \"relative\")\r\n            .style(\"height\", `${this.canvasHeight}px`);\r\n\r\n        this.labelContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.id}_label`)\r\n            //.style(\"position\", \"absolute\")\r\n            //.style(\"height\", `${this.canvasHeight}px`)\r\n            //.style(\"width\", `${this.options.label.width}px`)\r\n            .style(\"margin-left\", `${this.options.label.left}px`)\r\n            .style(\"margin-top\", (this.options.label.top + this.options.scaleBar.height) + \"px\")\r\n\r\n        this.mainCanvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.id}_canvas`)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"left\", (this.options.label.width + this.options.label.left) + \"px\")\r\n            .style(\"top\", this.options.sequence.top + \"px\")\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width - this.options.label.width - this.options.label.left);\r\n\r\n        this.mainCanvas\r\n            .on(\"mousemove\", () => {\r\n                event.preventDefault();\r\n                if (this.isDragging) {\r\n                    this._move(event.movementX / window.devicePixelRatio);\r\n                }\r\n            })\r\n            .on(\"mousewheel\", () => {\r\n                event.preventDefault();\r\n                if (event.deltaY > 0) {\r\n                    this._zoomOut();\r\n                } else if (event.deltaY < 0) {\r\n                    this._zoomIn();\r\n                }\r\n            })\r\n            .on(\"mousedown\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = true;\r\n                }\r\n            })\r\n            .on(\"mouseup\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = false;\r\n\r\n                }\r\n            })\r\n            .on(\"mouseout\", () => {\r\n                this.isDragging = false;\r\n            })\r\n            .on(\"dblclick\", () => {\r\n                this._resetZoom();\r\n            });\r\n    }\r\n\r\n    /*    _sortAlignments(newIndex, oldIndex) {\r\n            const target = this.orderedAlignments[oldIndex]\r\n            this.orderedAlignments.splice(oldIndex, 1);\r\n            this.orderedAlignments.splice(newIndex, 0, target);\r\n            this._drawSequences();\r\n        }\r\n    */\r\n\r\n    _initHeader() {\r\n        if (this.options.header.enable) {\r\n            this.headerCanvas = this.headerContainer\r\n                .style(\"position\", \"relative\")\r\n                .style(\"height\", this.options.header.height + 2 + \"px\")\r\n                .create(\"canvas\")\r\n                .attr(\"height\", this.options.header.height + 2 + \"px\")\r\n                .attr(\"width\", this.width)\r\n                .style(\"position\", \"absolute\");\r\n            this.headerCtx = this.headerCanvas.elements[0].getContext(\"2d\");\r\n            this.options.header.left = this.options.sequence.left + this.options.label.width + this.options.label.left + this.options.label.right;\r\n        }\r\n    }\r\n\r\n\r\n    _updateSortInfo(sortable) {\r\n        const sortArr = sortable.toArray();\r\n        utils.each(this.inputJson[\"sequences\"], (val) => {\r\n            val.order = sortArr.indexOf(val.name)\r\n        });\r\n        this.drawSequences();\r\n    }\r\n\r\n    drawSequences() {\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        const seqWidth = this.options.seqHeight - this.options.sequence.topMargin - this.options.sequence.bottomMargin;\r\n        drawer.setLineWidth(this.ctx, seqWidth);\r\n        drawer.setTextAlign(this.ctx, \"center\");\r\n\r\n        utils.each(this.inputJson[\"sequences\"], (val) => {\r\n            this._drawSequence(val);\r\n        });\r\n\r\n        this._drawHighlightRect();\r\n        this._drawScaleBar();\r\n        this._drawHeader();\r\n\r\n    }\r\n\r\n    _drawSequence(alignment) {\r\n        const seqWidth = this.options.seqHeight - this.options.sequence.topMargin - this.options.sequence.bottomMargin;\r\n        const y = this.options.scaleBar.height + this.options.seqHeight * (alignment.order + 1) + this.options.sequence.topMargin - seqWidth / 2;\r\n        let seq = [];\r\n        if (this.isConservedRegionMode) {\r\n            const conservedSeq = utils.getTrueArr(alignment[\"seq\"].split(\"\"), this.conservedRegionBooleanArr);\r\n            seq = conservedSeq.slice(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5));\r\n        } else {\r\n            seq = alignment[\"seq\"].substr(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5) - parseInt(this.alignmentPosition.start + 0.5)).split(\"\");\r\n        }\r\n        if (seq.length == 0) return;\r\n        let seqLength = seq.length;\r\n        //        if (seq.length < 10) seqLength = 10;\r\n        this.baseWidth = (this.options.sequence.width) / seqLength;\r\n\r\n        drawer.setFillStyle(this.ctx, \"black\");\r\n        this.ctx.font = this.options.sequence.fontSize + \"px Arial serif\";\r\n\r\n        if (this.baseWidth < 10) {\r\n            utils.each(seq, (val, i) => {\r\n                drawer.drawLine(this.ctx, this.options.sequence.left + i * this.baseWidth, this.options.sequence.left + (i + 1) * this.baseWidth, y, y, this.options.colorScheme[val]);\r\n            });\r\n        } else {\r\n            utils.each(seq, (val, i) => {\r\n                drawer.drawLine(this.ctx, this.options.sequence.left + i * this.baseWidth, this.options.sequence.left + (i + 1) * this.baseWidth, y, y, this.options.colorScheme[val]);\r\n                this.ctx.fillText(val, this.options.sequence.left + (i * this.baseWidth) + this.baseWidth / 2, y + this.options.sequence.fontSize * 0.33);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _drawSequenceLabel() {\r\n        utils.each(this.orderedAlignments, (alignment, i) => {\r\n            const y = this.options.seqHeight * (i + 1);\r\n            this.labelDiv = this.labelContainer.create(\"div\")\r\n                //.style(\"position\", \"absolute\")\r\n                //.style(\"top\", y + \"px\")\r\n                .attr(\"data-id\", alignment.name)\r\n                .style(\"font-size\", this.options.label.fontSize + \"px\")\r\n                .style(\"color\", this.group[alignment[\"group\"]].col)\r\n                .style(\"height\", this.options.seqHeight + \"px\")\r\n\r\n            const label_p = this.labelDiv.create(\"p\").style(\"margin\", \"0\")\r\n                .style(\"height\", this.options.seqHeight + \"px\");\r\n            label_p.create(\"span\")\r\n                .setClass(\"handle fas fa-expand-arrows-alt\")\r\n                .html(\" \")\r\n\r\n            label_p.elements[0].innerHTML += (alignment.name + \"_\" + alignment[\"group\"]);\r\n        });\r\n    }\r\n\r\n    _drawHighlightRect() {\r\n        utils.each(this.highlightedIndicies, (val) => {\r\n            const i = val.index;\r\n            const y = this.options.scaleBar.height + this.options.seqHeight * (i) + this.options.sequence.topMargin;\r\n            drawer.drawRect(this.ctx, this.options.sequence.left, y, this.options.sequence.width, this.options.seqHeight, \"red\", 3);\r\n        });\r\n    }\r\n\r\n    _drawScaleBar() {\r\n        if (this.options.scaleBar.enable) {\r\n            drawer.setLineWidth(this.ctx, 1.5);\r\n\r\n            const s = this.alignmentPosition.start\r\n            const e = this.alignmentPosition.end\r\n            const size = e - s;\r\n\r\n            let numBreaks = this.options.sequence.width > 500 ? 10 : 5;\r\n            let stepSize = parseInt(size / numBreaks);\r\n            numBreaks = parseInt(size / stepSize);\r\n\r\n            if (size < 30 && this.baseWidth > 20) {\r\n                numBreaks = size;\r\n                stepSize = 1;\r\n            }\r\n            let startX = this.options.sequence.left;\r\n            let startY = this.options.scaleBar.height - this.options.scaleBar.fontSize / 2;\r\n\r\n            for (let i = 0; i < numBreaks; i++) {\r\n                startX = this.options.sequence.left + i * stepSize * this.baseWidth + this.baseWidth / 2;\r\n                drawer.drawTxt(this.ctx, parseInt(s + i * stepSize + 0.5 + 1), startX, startY, this.options.scaleBar.fontSize + \"px Arial serif\");\r\n                drawer.drawLine(this.ctx, startX, startX, this.options.scaleBar.height, startY + 1, \"grey\");\r\n            }\r\n            if (stepSize !== 1) {\r\n                startX = this.options.sequence.left + parseInt(size + 0.5) * this.baseWidth - this.baseWidth / 2;\r\n                drawer.drawTxt(this.ctx, parseInt(e), startX, startY, this.options.scaleBar.fontSize + \"px Arial serif\");\r\n                drawer.drawLine(this.ctx, startX, startX, this.options.scaleBar.height, startY + 1, \"grey\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _drawHeader() {\r\n        if (this.options.header.enable) {\r\n            const leftMergin = 10;\r\n            drawer.clear(this.headerCtx, this.width, this.options.header.height);\r\n            this._drawNonGrapRate();\r\n            this._drawSeqLogo();\r\n\r\n            drawer.setLineWidth(this.headerCtx, 1);\r\n            drawer.setStrokeStyle(this.headerCtx, \"black\");\r\n            const startX = this.options.header.left;\r\n            const startY = this.options.header.top;\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, startX - leftMergin, this.options.header.height + 1, startY);\r\n            drawer.drawLine(this.headerCtx, this.width - 1, this.width - 1, this.options.header.height + 1, startY);\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, this.width, startY, startY);\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, this.width, this.options.header.height + 1, this.options.header.height + 1);\r\n        }\r\n    }\r\n\r\n    _drawSeqLogo() {\r\n        if (this.options.seqLogo.enable && this.baseWidth > 10) {\r\n            // draw Y axis\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setFillStyle(this.headerCtx, \"black\");\r\n\r\n            this.headerCtx.rotate(Math.PI * 3 / 2);\r\n            drawer.drawTxt(this.headerCtx, \"bits\", -(this.options.header.height / 2), this.options.header.left - 35, \"14px sans-serif\")\r\n            this.headerCtx.rotate(Math.PI * 1 / 2);\r\n            drawer.setTextAlign(this.headerCtx, \"right\");\r\n            drawer.drawTxt(this.headerCtx, \"0\", this.options.header.left - 14, this.options.header.height, \"12px sans-serif\")\r\n            drawer.drawTxt(this.headerCtx, \"4.5\", this.options.header.left - 14, this.options.header.top + 6, \"12px sans-serif\")\r\n\r\n            drawer.setLineWidth(this.headerCtx, 1);\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n\r\n            this.headerCtx.font = '900 ' + 30 * (this.options.header.height - this.options.header.top) / 100 + 'px \"Arial Black\", Arial, Gadget, sans-serif';\r\n            const maxVal = Math.log2(22);\r\n            const logoHeight = this.options.header.height - this.options.header.top - 1;\r\n            const baseHeight = logoHeight / maxVal;\r\n\r\n            const startX = this.options.header.left;\r\n            const startY = this.options.header.top + 1;\r\n\r\n            const wSize = this.baseWidth;\r\n\r\n            let entropies = [];\r\n            if (this.isConservedRegionMode) {\r\n                entropies = utils.getTrueArr(this.shannonEntropyArr, this.conservedRegionBooleanArr);\r\n            } else {\r\n                entropies = this.shannonEntropyArr;\r\n            }\r\n\r\n            utils.each(entropies, (site, i) => {\r\n                if (i >= parseInt(this.alignmentPosition.start + 0.5) && i <= parseInt(this.alignmentPosition.end + 0.5 - 1)) {\r\n                    const buf = utils.filterAndSortEntroy(site);\r\n                    let preHeight = logoHeight * (1 - buf[\"sum\"] / maxVal);\r\n\r\n                    utils.each(buf[\"res\"], (val) => {\r\n                        const text = val.name.replace(\"-\", \"\\\\\");\r\n\r\n                        let height = (logoHeight) * val.value / maxVal;\r\n                        let hRate = height / baseHeight;\r\n\r\n                        this.headerCtx.transform(1, 0, 0, hRate, startX + wSize / 2 + wSize * (i - parseInt(this.alignmentPosition.start + 0.5)), startY + height + preHeight);\r\n                        this.headerCtx.fillStyle = utils.TAYLOR_COLOR[text];\r\n                        this.headerCtx.fillText(text, 0, 0, wSize);\r\n                        this.headerCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n                        preHeight = height + preHeight;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  draw 1 - gap rate\r\n     */\r\n    _drawNonGrapRate() {\r\n        if (this.options.nonGapRate.enable && this.baseWidth <= 10 && !this.isConservedRegionMode) {\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setFillStyle(this.headerCtx, \"black\");\r\n\r\n            // draw Y axis\r\n            this.headerCtx.rotate(Math.PI * 3 / 2);\r\n            drawer.drawTxt(this.headerCtx, \"1 - gap rate\", -(this.options.header.height / 2), this.options.header.left - 35, \"14px sans-serif\")\r\n            this.headerCtx.rotate(Math.PI * 1 / 2);\r\n            drawer.setTextAlign(this.headerCtx, \"right\");\r\n            drawer.drawTxt(this.headerCtx, \"0\", this.options.header.left - 14, this.options.header.height, \"12px sans-serif\")\r\n            drawer.drawTxt(this.headerCtx, \"1\", this.options.header.left - 14, this.options.header.top + 6, \"12px sans-serif\")\r\n\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setLineWidth(this.headerCtx, this.baseWidth);\r\n\r\n            const bottomLineY = this.options.header.height;\r\n            const maxVal = this.options.header.height - this.options.header.top - 1;\r\n            utils.each(this.gapRate, (val, i) => {\r\n                if (i >= parseInt(this.alignmentPosition.start + 0.5) && i <= parseInt(this.alignmentPosition.end + 0.5 - 1)) {\r\n                    const x = this.options.header.left + (i - parseInt(this.alignmentPosition.start + 0.5)) * this.baseWidth + this.baseWidth * 0.5;\r\n                    drawer.drawLine(this.headerCtx, x, x, bottomLineY, bottomLineY - maxVal * (1 - val), (1 - val >= this.options.nonGapRate.th) ? this.options.nonGapRate.highColor : this.options.nonGapRate.baseColor);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // zoom functions\r\n    _zoomIn() {\r\n        let zoomSize = this.baseWidth < 5 ? 20 : (this.baseWidth < 10 ? 10 : 5);\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start > 30) {\r\n            this.alignmentPosition.start += zoomSize;\r\n            this.alignmentPosition.end -= zoomSize;\r\n            this.drawSequences();\r\n        } else if (this.alignmentPosition.end - this.alignmentPosition.start > 10) {\r\n            this.alignmentPosition.start += 2;\r\n            this.alignmentPosition.end -= 2;\r\n            this.drawSequences();\r\n        } else if (this.alignmentPosition.end - this.alignmentPosition.start > 2) {\r\n            this.alignmentPosition.start += 1;\r\n            this.alignmentPosition.end -= 1;\r\n            this.drawSequences();\r\n        }\r\n    }\r\n\r\n    _zoomOut() {\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start < 30) {\r\n            this.alignmentPosition.start -= 2;\r\n            this.alignmentPosition.end += 2;\r\n\r\n        } else {\r\n            let zoomSize = this.baseWidth < 5 ? 20 : (this.baseWidth < 10 ? 10 : 5);\r\n            if (this.alignmentPosition.start == 0 && this.alignmentPosition.end == this.alignmentPosition.size) return;\r\n            this.alignmentPosition.start -= zoomSize;\r\n            this.alignmentPosition.end += zoomSize;\r\n            if (this.alignmentPosition.start < 0) {\r\n                this.alignmentPosition.start = 0;\r\n            }\r\n            if (this.alignmentPosition.end > this.alignmentPosition.size) {\r\n                this.alignmentPosition.end = this.alignmentPosition.size;\r\n            }\r\n        }\r\n        this.drawSequences();\r\n    }\r\n\r\n    _move(x) {\r\n        if (x === 0) return;\r\n        let moveSize = x / (this.baseWidth);\r\n        this.alignmentPosition.start -= moveSize;\r\n        this.alignmentPosition.end -= moveSize;\r\n        if (this.alignmentPosition.end > this.alignmentPosition.size) {\r\n            this.alignmentPosition.start += moveSize;\r\n            this.alignmentPosition.end = this.alignmentPosition.size;\r\n        }\r\n        if (this.alignmentPosition.start < 0) {\r\n            this.alignmentPosition.start = 0;\r\n            this.alignmentPosition.end += moveSize;\r\n        }\r\n        if (parseInt(this.alignmentPosition.start + 0.5) !== parseInt(this.alignmentPosition.preStart + 0.5) ||\r\n            parseInt(this.alignmentPosition.end - this.alignmentPosition.start + 0.5) !== parseInt(this.alignmentPosition.preEnd - this.alignmentPosition.preStart + 0.5)) {\r\n            this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n            this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n\r\n            this.drawSequences();\r\n        }\r\n    }\r\n\r\n    _resetZoom() {\r\n        this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n        this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n        this.alignmentPosition.start = 0;\r\n        this.alignmentPosition.end = this.alignmentPosition.size;\r\n        this.drawSequences();\r\n    }\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    elementId: \"def\",\r\n    setSize: true,\r\n    height: 600,\r\n    width: 600,\r\n    outerRadius: 400,\r\n    innnerRadius: 20,\r\n    ringMargin: 2,\r\n    highlighterEnable: true,\r\n}\r\n\r\nconst color = {\r\n    colorScheme: col.TAYLOR_COLOR,\r\n}","import {\r\n    options\r\n} from \"./option\"\r\nimport * as drawer from \"../utils/canvas\"\r\nimport * as utils from \"../utils/index\";\r\n\r\n\r\n\r\nexport class CircularGenomeBrowser {\r\n    constructor(opt) {\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n\r\n        this.container = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.halfX = 0;\r\n        this.halfY = 0;\r\n\r\n        this.inputJson = null;\r\n        this.numGenomes = null;\r\n\r\n        this.maxRadius = 0\r\n        this.ringSize = 0\r\n\r\n        this.highlightCanvas = null;\r\n        this.highlighter = null;\r\n    }\r\n\r\n    setContainer(elementID) {\r\n        console.log(\"load element: \" + elementID);\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.elementId = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n        }\r\n        this.canvasHeight = this.width;\r\n        this.halfX = this.width / 2;\r\n        this.halfY = this.canvasHeight / 2;\r\n    }\r\n\r\n    /**\r\n     * @param {json} json \r\n     */\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numGenomes = json[\"genomes\"].length;\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this.ctx = this.mainCanvas.elements[0].getContext(\"2d\");\r\n        if (this.options.highlighterEnable) {\r\n            this.highlighter = new Highlighter(this.highlightCanvas, this.width, this.canvasHeight, this.inputJson);\r\n        }\r\n        this.drawCircularGenomes();\r\n    }\r\n\r\n    _DOMcreate() {\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.elementId}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.elementId}_canvasContainer`)\r\n            .style(\"height\", `${this.canvasHeight}px`);\r\n\r\n        this.mainCanvas = this.canvasContainer.create(\"canvas\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .setID(`${this.options.elementId}_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"left\", \"0\");\r\n\r\n        this.highlightCanvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.elementId}_highlight_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .style(\"left\", \"0\");\r\n    }\r\n\r\n    redrawCircularGenomes() {\r\n        this._drawKaryotype();\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        this._drawCircularGenomes()\r\n    }\r\n\r\n    drawCircularGenomes() {\r\n        this._init_radius();\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        this._drawKaryotype();\r\n        this._drawCircularGenomes()\r\n    }\r\n\r\n    _init_radius() {\r\n        this.ringSize = ((this.options.outerRadius - (this.numGenomes - 1) * this.options.ringMargin - this.options.innnerRadius) / this.numGenomes);\r\n        if (this.ringSize < 0) {\r\n            this.options.ringMargin = 1;\r\n            this.ringSize = ((this.options.outerRadius - (this.numGenomes - 1) * this.options.ringMargin - this.options.innnerRadius) / this.numGenomes);\r\n        }\r\n        if (this.ringSize < 0) {\r\n            this.options.ringMargin = 0;\r\n            this.ringSize = ((this.options.outerRadius - this.options.innnerRadius) / this.numGenomes);\r\n        }\r\n\r\n        console.log(\"Ring size: \" + this.ringSize);\r\n        this.maxRadius = this.options.outerRadius + this.ringSize / 2;\r\n        if (this.highlighter) this.highlighter.maxRadius = this.maxRadius + 10;\r\n        for (let i = 0; i < this.numGenomes; i++) {\r\n            this.inputJson.genomes[i][\"r\"] = this.options.outerRadius - this.inputJson.genomes[i].order * (this.ringSize + this.options.ringMargin)\r\n        }\r\n    }\r\n\r\n    _drawCircularGenomes() {\r\n        drawer.setLineWidth(this.ctx, this.ringSize);\r\n        for (let i = 0; i < this.numGenomes; i++) {\r\n            for (let l = 0; l < this.inputJson.genomes[i].genes.length; l++) {\r\n                drawer.drawArc(this.ctx, this.halfX, this.halfY, this.inputJson.genomes[i][\"r\"], this.inputJson.genomes[i].genes[l][\"start_rotated_rad\"], this.inputJson.genomes[i].genes[l][\"end_rotated_rad\"], this.inputJson.genomes[i].genes[l].angle);\r\n            }\r\n        }\r\n    }\r\n\r\n    _drawKaryotype() {\r\n        drawer.setLineWidth(this.ctx, 5);\r\n        for (let i = 0; i < 360; i++) {\r\n            drawer.drawArc(this.ctx, this.halfX, this.halfY, this.maxRadius, this.convertDeg2Rad(i), this.convertDeg2Rad(i + 1), i);\r\n        }\r\n    }\r\n\r\n    convertDeg2Rad(deg) {\r\n        return 2 * Math.PI * deg / 360;\r\n    }\r\n}\r\n\r\nclass Highlighter {\r\n    constructor(canvas, width, height, json) {\r\n        this.canvas = canvas;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.halfX = this.width / 2;\r\n        this.halfY = this.height / 2;\r\n        this.maxRadius = 0;\r\n        this.ctx = this.canvas.elements[0].getContext(\"2d\");\r\n        this.inputJson = json;\r\n        this.isHighlightLock = false;\r\n        this.zoomSize = 0.5;\r\n        this.updateFunction = null;\r\n\r\n        this.zoomStart = 0;\r\n        this.zoomEnd = 0;\r\n        this._init();\r\n    }\r\n    clear() {\r\n        drawer.clear(this.ctx, this.width, this.height);\r\n    }\r\n    showArc(start, end) {\r\n        this.clear();\r\n        this.setLineWidth(5);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.halfX, this.halfY);\r\n        this.ctx.arc(this.halfX, this.halfY, this.maxRadius, start, end);\r\n        this.ctx.fillStyle = \"rgba(50,50,50,0.5)\";\r\n        this.ctx.strokeStyle = \"rgba(50,50,50, 0.7)\";\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n    }\r\n    showArcRegions(r, ringSize, start, end) {\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.halfX, this.halfY, r + ringSize / 2, start, end);\r\n        this.ctx.lineTo(this.halfX + (r - ringSize / 2) * Math.cos(end), this.halfY + (r - ringSize / 2) * Math.sin(end));\r\n        this.ctx.arc(this.halfX, this.halfY, r - ringSize / 2, end, start, true);\r\n        this.ctx.lineTo(this.halfX + (r + ringSize / 2) * Math.cos(start), this.halfY + (r + ringSize / 2) * Math.sin(start));\r\n        this.ctx.stroke();\r\n        this.ctx.fill();\r\n    }\r\n    setLineWidth(x) {\r\n        drawer.setLineWidth(this.ctx, x);\r\n    }\r\n\r\n    setUpdateFunction(func) {\r\n        this.updateFunction = func;\r\n    }\r\n\r\n    _init() {\r\n        this.canvas\r\n            .on(\"mousemove\", () => {\r\n                if (!this.isHighlightLock) {\r\n                    const xy = this.canvas.mouse;\r\n                    const angle = this._getAngleFromMousePosition(xy);\r\n                    this.zoomStart = angle - this.zoomSize;\r\n                    this.zoomEnd = angle + this.zoomSize;\r\n                    this.showArc(this.zoomStart, this.zoomEnd);\r\n                }\r\n            })\r\n            .on(\"mouseleave\", () => {\r\n                if (!this.isHighlightLock) {\r\n                    this.clear();\r\n                }\r\n            })\r\n\r\n            .on(\"click\", () => {\r\n                if (!this.isHighlightLock) {\r\n                    this.isHighlightLock = true;\r\n                    if (this.updateFunction) {\r\n                        this.updateFunction(this.zoomStart, this.zoomEnd);\r\n                    }\r\n                } else {\r\n                    this.isHighlightLock = false;\r\n                }\r\n            });\r\n    }\r\n    _getAngleFromMousePosition(xy) {\r\n        let x = xy[0] - this.halfX;\r\n        let y = xy[1] - this.halfX;\r\n        let tan = y / x;\r\n        let angle = Math.atan(tan);\r\n        if (x < 0) {\r\n            return angle + Math.PI;\r\n        } else {\r\n            return angle;\r\n        }\r\n    }\r\n\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    elementId: \"def\",\r\n    setSize: false,\r\n    height: 600,\r\n    width: 600,\r\n    each\r\n}\r\n\r\nconst color = {\r\n    colorScheme: col.TAYLOR_COLOR,\r\n}","import {\r\n    options\r\n} from \"./option\"\r\nimport * as drawer from \"../utils/canvas\"\r\nimport * as utils from \"../utils/index\";\r\n\r\n\r\n\r\nexport class LinearGenomeBrowser {\r\n    constructor(opt) {\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n    }\r\n\r\n    setContainer(elementID) {\r\n        console.log(\"load element: \" + elementID);\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.elementId = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n        }\r\n        this.canvasHeight = this.width;\r\n        this.halfX = this.width / 2;\r\n        this.halfY = this.canvasHeight / 2;\r\n    }\r\n\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numGenomes = json[\"genomes\"].length;\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this.ctx = this.mainCanvas.elements[0].getContext(\"2d\");\r\n        if (this.options.highlighterEnable) {\r\n            this.highlighter = new Highlighter(this.highlightCanvas, this.width, this.canvasHeight, this.inputJson);\r\n        }\r\n        //        this.drawCircularGenomes();\r\n    }\r\n\r\n    _DOMcreate() {\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.elementId}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.elementId}_canvasContainer`)\r\n            .style(\"height\", `${this.canvasHeight}px`);\r\n\r\n        this.mainCanvas = this.canvasContainer.create(\"canvas\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .setID(`${this.options.elementId}_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"left\", \"0\");\r\n\r\n        this.highlightCanvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.elementId}_highlight_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .style(\"left\", \"0\");\r\n    }\r\n\r\n}","//\r\n// my fetch functions\r\n// ref: https://github.com/d3/d3-fetch\r\n\r\nexport const text = (input, init) => {\r\n    return fetch(input, init).then((response) => {\r\n        if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n        return response.text();\r\n    });\r\n}\r\n\r\nexport const json = (input, init) => {\r\n    return fetch(input, init).then((response) => {\r\n        if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n        return response.json();\r\n    });\r\n}"],"names":["key","toString","Object","prototype","hasOwnProperty","has","obj","path","call","nativeKeys","keys","MAX_ARRAY_INDEX","Math","pow","getLength","optimizeCb","func","context","argCount","value","index","collection","console","log","accumulator","apply","arguments","getKeys","type","isObject","push","each","iteratee","i","length","isArrayLike","group","behavior","partition","result","groupBy","countBy","indexBy","seqStat","seqs","results","len","init","seq","val","seqArr","split","isConservedRegoin","conserved","conservedRegionLength","counter","calcGapRate","numSeq","res","calcShannonEntropy","s","v","log2","filterAndSortEntroy","entropyArr","buf","name","sort","a","b","getTrueArr","resourceArr","booleanArr","getAllSequenceAsFasta","sequenceObj","ret","join","getConservedRegionAsFasta","Selector","elements","mouse","eventType","callback","capture","_","this","el","addEventListener","rect","getBoundingClientRect","_this","event","clientX","left","clientLeft","clientY","top","clientTop","elementName","newEle","document","createElement","appendChild","stylName","styleValue","style","setProperty","attrName","attrValue","setAttribute","className","attr","idName","text","textContent","selectID","getElementById","TAYLOR_COLOR","A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","S","T","W","Y","V","B","X","Z","hsvToRgb","Hp","abs","m","floor","COLER_ARR","k","j","getColorPallet","getColors","stepSize","PROTEIN_COL_V1","generateLink","fileName","dataPath","link","download","href","exportText","textString","blob","Blob","url","window","URL","createObjectURL","click","exportJson","json","replacer","indent","JSON","stringify","size","width","height","right","bottom","font","fontSize","options","id","setSize","seqHeight","isGrouping","colorScheme","col","header","enable","seqLogo","nonGapRate","baseColor","highColor","th","label","sequence","topMargin","bottomMargin","scaleBar","deg90","PI","setLineWidth","ctx","lineWidth","setTextAlign","align","textAlign","setFillStyle","fStyle","fillStyle","drawLine","startX","endX","startY","endY","strokeStyle","beginPath","moveTo","lineTo","stroke","drawArc","x","y","r","startRad","endRad","angle","color","arc","drawTxt","fillText","clear","clearRect","AlignmentPosition","start","end","preStart","preEnd","Alignment","opt","mainCanvas","isDragging","container","inputJson","canvasHeight","headerContainer","bodyContainer","labelContainer","labelDiv","canvasContainer","alignmentPosition","baseWidth","seqLength","orderedAlignments","highlightedIndicies","isConservedRegionMode","conservedRegionBooleanArr","headerCanvas","headerCtx","gapRate","shannonEntropyArr","elementID","utils","html","clientWidth","clientHeight","dicArr","_group","arr","count","names","getGroup","order","Array","alignment","_DOMcreate","getContext","_initHeader","_drawSequenceLabel","drawSequences","update","targetSeq","_this2","slice","parseInt","substr","create","setID","setClass","on","preventDefault","_this3","_move","movementX","devicePixelRatio","deltaY","_zoomOut","_zoomIn","button","_resetZoom","sortable","sortArr","toArray","indexOf","drawer","seqWidth","_this4","_drawSequence","_drawHighlightRect","_drawScaleBar","_drawHeader","_this5","_this6","label_p","innerHTML","_this7","strokeRect","e","numBreaks","_drawNonGrapRate","_drawSeqLogo","sStyle","rotate","maxVal","logoHeight","baseHeight","wSize","entropies","site","_this8","preHeight","replace","hRate","transform","setTransform","bottomLineY","_this9","zoomSize","moveSize","elementId","outerRadius","innnerRadius","ringMargin","highlighterEnable","CircularGenomeBrowser","halfX","halfY","numGenomes","maxRadius","ringSize","highlightCanvas","highlighter","Highlighter","drawCircularGenomes","_drawKaryotype","_drawCircularGenomes","_init_radius","genomes","l","genes","convertDeg2Rad","deg","canvas","isHighlightLock","updateFunction","zoomStart","zoomEnd","_init","closePath","fill","restore","cos","sin","xy","_getAngleFromMousePosition","showArc","tan","atan","LinearGenomeBrowser","svgElement","svgString","svg","ActiveXObject","xml","XMLSerializer","serializeToString","input","fetch","then","response","ok","Error","status","statusText","querySelector","querySelectorAll","getElementsByClassName"],"mappings":"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"}