{"version":3,"file":"bundle.min.js","sources":["../src/utils/color.js","../src/utils/myUnderscore.js","../src/utils/sequence.js","../src/utils/selector.js","../src/utils/fetch.js","../src/utils/download.js","../src/utils/modal.js","../src/sequenceAlignment/option.js","../src/utils/canvas.js","../src/sequenceAlignment/multipleSequenceAlignment.js","../src/circularBrowser/option.js","../src/circularBrowser/circularGenomeBrowser.js","../src/linearBrowser/option.js","../src/linearBrowser/sequenceModel.js","../src/linearBrowser/linearGenomeBrowser.js"],"sourcesContent":["// colors: https://github.com/wilzbach/msa-colorschemes/tree/master/src\r\nexport const CLUSTAL2_COLOR = {\r\n    A: \"#80a0f0\",\r\n    R: \"#f01505\",\r\n    N: \"#00ff00\",\r\n    D: \"#c048c0\",\r\n    C: \"#f08080\",\r\n    Q: \"#00ff00\",\r\n    E: \"#c048c0\",\r\n    G: \"#f09048\",\r\n    H: \"#15a4a4\",\r\n    I: \"#80a0f0\",\r\n    L: \"#80a0f0\",\r\n    K: \"#f01505\",\r\n    M: \"#80a0f0\",\r\n    F: \"#80a0f0\",\r\n    P: \"#ffff00\",\r\n    S: \"#00ff00\",\r\n    T: \"#00ff00\",\r\n    W: \"#80a0f0\",\r\n    Y: \"#15a4a4\",\r\n    V: \"#80a0f0\",\r\n    B: \"#fff\",\r\n    X: \"#fff\",\r\n    Z: \"#fff\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\n\r\nexport const STRAND_COLOR = {\r\n    A: \"#5858a7\",\r\n    R: \"#6b6b94\",\r\n    N: \"#64649b\",\r\n    D: \"#2121de\",\r\n    C: \"#9d9d62\",\r\n    Q: \"#8c8c73\",\r\n    E: \"#0000ff\",\r\n    G: \"#4949b6\",\r\n    H: \"#60609f\",\r\n    I: \"#ecec13\",\r\n    L: \"#b2b24d\",\r\n    K: \"#4747b8\",\r\n    M: \"#82827d\",\r\n    F: \"#c2c23d\",\r\n    P: \"#2323dc\",\r\n    S: \"#4949b6\",\r\n    T: \"#9d9d62\",\r\n    W: \"#c0c03f\",\r\n    Y: \"#d3d32c\",\r\n    V: \"#ffff00\",\r\n    B: \"#4343bc\",\r\n    X: \"#797986\",\r\n    Z: \"#4747b8\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\nexport const TAYLOR_COLOR = {\r\n    A: \"#ccff00\",\r\n    R: \"#0000ff\",\r\n    N: \"#cc00ff\",\r\n    D: \"#ff0000\",\r\n    C: \"#ffff00\",\r\n    Q: \"#ff00cc\",\r\n    E: \"#ff0066\",\r\n    G: \"#ff9900\",\r\n    H: \"#0066ff\",\r\n    I: \"#66ff00\",\r\n    L: \"#33ff00\",\r\n    K: \"#6600ff\",\r\n    M: \"#00ff00\",\r\n    F: \"#00ff66\",\r\n    P: \"#ffcc00\",\r\n    S: \"#ff3300\",\r\n    T: \"#ff6600\",\r\n    W: \"#00ccff\",\r\n    Y: \"#00ffcc\",\r\n    V: \"#99ff00\",\r\n    B: \"#fff\",\r\n    X: \"#fff\",\r\n    Z: \"#fff\",\r\n    \"-\": \"rgb(200,200,200)\",\r\n    \"\\\\\": \"rgb(200,200,200)\"\r\n}\r\n\r\nconst hsvToRgb = (H, S, V) => {\r\n    // https://qiita.com/hachisukansw/items/633d1bf6baf008e82847\r\n    var C = V * S;\r\n    var Hp = H / 60;\r\n    var X = C * (1 - Math.abs(Hp % 2 - 1));\r\n\r\n    var R, G, B;\r\n    if (0 <= Hp && Hp < 1) {\r\n        [R, G, B] = [C, X, 0]\r\n    } else if (1 <= Hp && Hp < 2) {\r\n        [R, G, B] = [X, C, 0]\r\n    } else if (2 <= Hp && Hp < 3) {\r\n        [R, G, B] = [0, C, X]\r\n    } else if (3 <= Hp && Hp < 4) {\r\n        [R, G, B] = [0, X, C]\r\n    } else if (4 <= Hp && Hp < 5) {\r\n        [R, G, B] = [X, 0, C]\r\n    } else if (5 <= Hp && Hp < 6) {\r\n        [R, G, B] = [C, 0, X]\r\n    }\r\n\r\n    var m = V - C;\r\n    [R, G, B] = [R + m, G + m, B + m];\r\n\r\n    R = Math.floor(R * 255);\r\n    G = Math.floor(G * 255);\r\n    B = Math.floor(B * 255);\r\n    return [R, G, B];\r\n}\r\n\r\nconst COLER_ARR = []\r\nfor (let k = 1; k >= 0.5; k -= 0.1) {\r\n    for (let j = 1; j >= 0.5; j -= 0.25) {\r\n        for (let i = 0; i < 360; i++) {\r\n            COLER_ARR.push(\"rgb(\" + hsvToRgb(i, j, k).join(\",\") + \")\");\r\n        }\r\n    }\r\n}\r\n\r\nconst getColorPallet = (i) => {\r\n    return COLER_ARR[i * 12]\r\n}\r\n\r\nexport const getColors = (i, stepSize) => {\r\n    return COLER_ARR[i * stepSize]\r\n}\r\n\r\nconst PROTEIN_COL_V1 = {}\r\n\r\nPROTEIN_COL_V1[\"A\"] = getColorPallet(0);\r\nPROTEIN_COL_V1[\"B\"] = getColorPallet(1);\r\nPROTEIN_COL_V1[\"C\"] = getColorPallet(2);\r\nPROTEIN_COL_V1[\"D\"] = getColorPallet(3);\r\nPROTEIN_COL_V1[\"E\"] = getColorPallet(4);\r\nPROTEIN_COL_V1[\"F\"] = getColorPallet(5);\r\nPROTEIN_COL_V1[\"G\"] = getColorPallet(6);\r\nPROTEIN_COL_V1[\"H\"] = getColorPallet(7);\r\nPROTEIN_COL_V1[\"I\"] = getColorPallet(8);\r\nPROTEIN_COL_V1[\"J\"] = getColorPallet(9);\r\nPROTEIN_COL_V1[\"K\"] = getColorPallet(10);\r\nPROTEIN_COL_V1[\"L\"] = getColorPallet(11);\r\nPROTEIN_COL_V1[\"M\"] = getColorPallet(12);\r\nPROTEIN_COL_V1[\"N\"] = getColorPallet(13);\r\nPROTEIN_COL_V1[\"O\"] = getColorPallet(14);\r\nPROTEIN_COL_V1[\"P\"] = getColorPallet(15);\r\nPROTEIN_COL_V1[\"Q\"] = getColorPallet(16);\r\nPROTEIN_COL_V1[\"R\"] = getColorPallet(17);\r\nPROTEIN_COL_V1[\"S\"] = getColorPallet(18);\r\nPROTEIN_COL_V1[\"T\"] = getColorPallet(19);\r\nPROTEIN_COL_V1[\"U\"] = getColorPallet(20);\r\nPROTEIN_COL_V1[\"V\"] = getColorPallet(21);\r\nPROTEIN_COL_V1[\"W\"] = getColorPallet(22);\r\nPROTEIN_COL_V1[\"X\"] = getColorPallet(23);\r\nPROTEIN_COL_V1[\"Y\"] = getColorPallet(24);\r\nPROTEIN_COL_V1[\"Z\"] = getColorPallet(25);\r\nPROTEIN_COL_V1[\"-\"] = \"rgb(200,200,200)\";\r\n\r\nconst NUCLEOTIDE_COLOR = {\r\n    A: \" #64F73F\",\r\n    C: \" #FFB340\",\r\n    G: \" #EB413C\",\r\n    T: \" #3C88EE\",\r\n    U: \" #3C88EE\"\r\n}\r\n\r\nexport {\r\n    PROTEIN_COL_V1,\r\n    COLER_ARR,\r\n    NUCLEOTIDE_COLOR\r\n}","// almost same functions as underscore.js\r\n// ref: https: //underscorejs.org/docs/underscore.html\r\n\r\nconst ObjProto = Object.prototype,\r\n    toString = ObjProto.toString,\r\n    hasOwnProperty = ObjProto.hasOwnProperty;\r\n\r\nconst has = function (obj, path) {\r\n    return obj != null && hasOwnProperty.call(obj, path);\r\n}\r\n\r\n\r\nconst nativeIsArray = Array.isArray,\r\n    nativeKeys = Object.keys,\r\n    nativeCreate = Object.create;\r\n\r\nconst shallowProperty = function (key) {\r\n    return function (obj) {\r\n        return obj == null ? void 0 : obj[key];\r\n    };\r\n};\r\n\r\nconst MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\r\nconst getLength = shallowProperty('length');\r\nconst isArrayLike = function (collection) {\r\n    const length = getLength(collection);\r\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\r\n};\r\n\r\nconst optimizeCb = function (func, context, argCount) {\r\n    if (context === void 0) return func;\r\n    switch (argCount == null ? 3 : argCount) {\r\n        case 1:\r\n            return function (value) {\r\n                return func.call(context, value);\r\n            };\r\n        case 3:\r\n            return function (value, index, collection) {\r\n                console.log(context);\r\n                return func.call(context, value, index, collection);\r\n            };\r\n        case 4:\r\n            return function (accumulator, value, index, collection) {\r\n                return func.call(context, accumulator, value, index, collection);\r\n            };\r\n    }\r\n    return function () {\r\n        return func.apply(context, arguments);\r\n    };\r\n};\r\n\r\nconst isObject = function (obj) {\r\n    var type = typeof obj;\r\n    return type === 'function' || type === 'object' && !!obj;\r\n};\r\n\r\nconst getKeys = function (obj) {\r\n    if (!isObject(obj)) return [];\r\n    if (nativeKeys) return nativeKeys(obj);\r\n    var keys = [];\r\n    for (var key in obj)\r\n        if (has(obj, key)) keys.push(key);\r\n\r\n    return keys;\r\n};\r\n\r\n\r\nexport const each = function (obj, iteratee, context) {\r\n    iteratee = optimizeCb(iteratee, context);\r\n    var i, length;\r\n    if (isArrayLike(obj)) {\r\n        for (i = 0, length = obj.length; i < length; i++) {\r\n            iteratee(obj[i], i, obj);\r\n        }\r\n    } else {\r\n        const keys = getKeys(obj);\r\n        for (i = 0, length = keys.length; i < length; i++) {\r\n            iteratee(obj[keys[i]], keys[i], obj);\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n\r\nconst group = function (behavior, partition) {\r\n    return function (obj, iteratee, context) {\r\n        var result = partition ? [\r\n            [],\r\n            []\r\n        ] : {};\r\n        iteratee = optimizeCb(iteratee, context);\r\n        each(obj, function (value, index) {\r\n            var key = iteratee(value, index, obj);\r\n            behavior(result, value, key);\r\n        });\r\n        return result;\r\n    };\r\n};\r\n\r\nexport const groupBy = group(function (result, value, key) {\r\n    if (has(result, key)) result[key].push(value);\r\n    else result[key] = [value];\r\n\r\n});\r\n\r\nexport const countBy = group(function (result, value, key) {\r\n    if (has(result, key)) result[key]++;\r\n    else result[key] = 1;\r\n});\r\n\r\nexport const indexBy = group(function (result, value, key) {\r\n    result[key] = value;\r\n});","import {\r\n    each\r\n} from \"./myUnderscore\"\r\n\r\nconst seqGroup = function (behavior, numSeq) {\r\n    return function (obj, iteratee, context) {\r\n        var result = partition ? [\r\n            [],\r\n            []\r\n        ] : {};\r\n        iteratee = optimizeCb(iteratee, context);\r\n        each(obj, function (value, index) {\r\n            var key = iteratee(value, index, obj);\r\n            behavior(result, value, key);\r\n        });\r\n        return result;\r\n    };\r\n}\r\n\r\n\r\nexport const seqStat = (seqs) => {\r\n    const results = [];\r\n    const init = (len) => {\r\n        for (let i = 0; i < len; i++) {\r\n            results.push({});\r\n        }\r\n    }\r\n    const others = (seq) => {\r\n        const seqArr = seq.split(\"\");\r\n        each(seqArr, (val, i) => {\r\n            if (val in results[i]) results[i][val]++;\r\n            else results[i][val] = 1;\r\n        });\r\n    }\r\n\r\n    init(seqs[0].seq.length);\r\n    each(seqs, (val) => {\r\n        others(val.seq);\r\n    });\r\n\r\n    return results\r\n}\r\n\r\nexport const isConservedRegoin = (seqArr) => {\r\n    const conserved = []\r\n    each(seqArr, (val) => {\r\n        if (val.hasOwnProperty(\"-\")) {\r\n            conserved.push(false);\r\n        } else {\r\n            conserved.push(true);\r\n        }\r\n    });\r\n    return conserved;\r\n}\r\n\r\nexport const conservedRegionLength = (seqArr) => {\r\n    let counter = 0;\r\n    each(seqArr, (val) => {\r\n        if (!val.hasOwnProperty(\"-\")) {\r\n            counter++;\r\n        }\r\n    });\r\n    return counter;\r\n}\r\n\r\nexport const calcGapRate = (seqArr, numSeq) => {\r\n    let res = [];\r\n    each(seqArr, (val) => {\r\n        if (val.hasOwnProperty(\"-\")) {\r\n            res.push(val[\"-\"] / numSeq);\r\n        } else res.push(0);\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const calcShannonEntropy = (seqArr, numSeq) => {\r\n    const results = [];\r\n    each(seqArr, (seqs) => {\r\n        const res = {}\r\n        let s = 0;\r\n        each(seqs, (val, key) => {\r\n            const v = -1 * val / numSeq * Math.log2(val / numSeq);\r\n            res[key] = v;\r\n            s += v;\r\n        })\r\n        res[\"Entropy\"] = Math.log2(22) - s;\r\n        each(res, (val, key) => {\r\n            if (key !== \"Entropy\") {\r\n                res[key] = res[\"Entropy\"] * seqs[key] / numSeq;\r\n            }\r\n        });\r\n        results.push(res);\r\n    });\r\n    return results;\r\n}\r\n/**\r\n * return {sum: totalHeight, res: {name: letter, value: letterHeight}}\r\n * @param {*} entropyArr \r\n */\r\nexport const filterAndSortEntroy = (entropyArr) => {\r\n    const res = [];\r\n    const buf = {}\r\n    let s = 0;\r\n    each(entropyArr, (val, key) => {\r\n        if (val > 0.1 && key !== \"Entropy\") {\r\n            res.push({\r\n                name: key,\r\n                value: val\r\n            });\r\n            s += val;\r\n        }\r\n    });\r\n    res.sort((a, b) => {\r\n        return b.value - a.value;\r\n    })\r\n    buf[\"sum\"] = s;\r\n    buf[\"res\"] = res;\r\n    return buf;\r\n}\r\n\r\nexport const getTrueArr = (resourceArr, booleanArr) => {\r\n    const res = [];\r\n    if (resourceArr.length !== booleanArr.length) {\r\n        console.log(\"not match: \" + resourceArr.length + \" \" + booleanArr.length);\r\n        return res;\r\n    }\r\n    each(resourceArr, (val, i) => {\r\n        if (booleanArr[i]) res.push(val);\r\n    });\r\n    return res;\r\n}\r\n\r\nexport const getAllSequenceAsFasta = (sequenceObj) => {\r\n    const ret = [];\r\n    each(sequenceObj, (val) => {\r\n        ret.push(\">\" + val.name);\r\n        ret.push(val.seq);\r\n    })\r\n    const result = ret.join(\"\\n\");\r\n    return result;\r\n}\r\n\r\nexport const getConservedRegionAsFasta = (sequenceObj, booleanArr) => {\r\n    const ret = [];\r\n    each(sequenceObj, (val) => {\r\n        const seqArr = getTrueArr(val.seq.split(\"\"), booleanArr);\r\n        ret.push(\">\" + val.name);\r\n        ret.push(seqArr.join(\"\"));\r\n    })\r\n    const result = ret.join(\"\\n\");\r\n    return result;\r\n}","import * as _ from \"./myUnderscore.js\";\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} elements id\r\n */\r\nclass Selector {\r\n    constructor(elements, isSvgChild = false) {\r\n        this.elements = elements;\r\n        this.mouse = null;\r\n        this.isSvgChild = isSvgChild\r\n    }\r\n\r\n    on(eventType, callback, context, capture = false) {\r\n        _.each(this.elements, (el) => {\r\n            el.addEventListener(eventType, () => {\r\n                const rect = el.getBoundingClientRect();\r\n                this.mouse = [event.clientX - rect.left - el.clientLeft, event.clientY - rect.top - el.clientTop];\r\n                callback.call(context);\r\n                this.mouse = null;\r\n            }, capture);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    create(elementName) {\r\n        const elements = [];\r\n        let isSvgChild = false;\r\n        _.each(this.elements, (el) => {\r\n            if (elementName == \"svg\" || this.isSvgChild) {\r\n                const newEle = document.createElementNS(\"http://www.w3.org/2000/svg\", elementName);\r\n                el.appendChild(newEle);\r\n                elements.push(newEle);\r\n                isSvgChild = true;\r\n            } else {\r\n                const newEle = document.createElement(elementName);\r\n                el.appendChild(newEle);\r\n                elements.push(newEle);\r\n            }\r\n        });\r\n        return new Selector(elements, isSvgChild);\r\n    }\r\n\r\n\r\n    remove() {\r\n        _.each(this.elements, (el) => {\r\n            el.parentNode.removeChild(el);\r\n        })\r\n    }\r\n\r\n    removeChild(el) {\r\n        _.each(this.elements, (element) => {\r\n            element.removeChild(el);\r\n        })\r\n    }\r\n\r\n\r\n    style(stylName, styleValue) {\r\n        _.each(this.elements, (el) => {\r\n            el.style.setProperty(stylName, styleValue);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    attr(attrName, attrValue) {\r\n        _.each(this.elements, (el) => {\r\n            el.setAttribute(attrName, attrValue);\r\n        });\r\n        return this;\r\n    }\r\n\r\n    setClass(className) {\r\n        return this.attr(\"class\", className);\r\n    }\r\n\r\n    setID(idName) {\r\n        return this.attr(\"id\", idName);\r\n    }\r\n\r\n    html(text) {\r\n        if (arguments.length == 1) {\r\n            if (text) {\r\n                _.each(this.elements, (el) => {\r\n                    el.textContent = text;\r\n                });\r\n            } else {\r\n                _.each(this.elements, (el) => {\r\n                    el.textContent = text;\r\n                });\r\n                return this;\r\n            }\r\n        } else {\r\n            const res = []\r\n            _.each(this.elements, (el) => {\r\n                res.push(el.textContent);\r\n            });\r\n            if (res.length === 1) return res[0];\r\n            return res;\r\n        }\r\n    }\r\n\r\n    innerHTML(text) {\r\n        if (arguments.length == 1) {\r\n            if (text) {\r\n                _.each(this.elements, (el) => {\r\n                    el.innerHTML = text;\r\n                });\r\n            } else {\r\n                _.each(this.elements, (el) => {\r\n                    el.innerHTML = text;\r\n                });\r\n                return this;\r\n            }\r\n        } else {\r\n            const res = []\r\n            _.each(this.elements, (el) => {\r\n                res.push(el.innerHTML);\r\n            });\r\n            if (res.length === 1) return res[0];\r\n            return res;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} idName ID name\r\n */\r\nexport const selectID = (idName) => {\r\n    return new Selector([document.getElementById(idName)]);\r\n}\r\n\r\n/**\r\n * faster than select;\r\n * @param {string} className class name\r\n */\r\nexport const selectClass = (className) => {\r\n    return new Selector([document.getElementsByClassName(className)]);\r\n}\r\n\r\n/**\r\n * selectID or selectClass is much fast;\r\n * @param {string} name css name\r\n */\r\nexport const select = (name) => {\r\n    return new Selector(\r\n        [document.querySelector(name)]\r\n    );\r\n}\r\n\r\n/**\r\n * selectID or selectClass is much fast;\r\n * @param {string} name css name\r\n */\r\nexport const selectAll = (name) => {\r\n    return new Selector(document.querySelectorAll(name));\r\n}","//\r\n// my fetch functions\r\n// ref: https://github.com/d3/d3-fetch\r\n\r\nexport const text = (input, init) => {\r\n    return fetch(input, init).then((response) => {\r\n        if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n        return response.text();\r\n    });\r\n}\r\n\r\nexport const json = (input, init) => {\r\n    return fetch(input, init).then((response) => {\r\n        if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n        return response.json();\r\n    });\r\n}","// download https://jsgao0.wordpress.com/2016/06/01/export-svg-file-using-xmlserializer/\r\nexport const generateLink = (fileName, dataPath) => {\r\n    var link = document.createElement('a'); // Create a element.\r\n    link.download = fileName; // Set value as the file name of download file.\r\n    link.href = dataPath; // Set value as the file content of download file.\r\n    return link;\r\n}\r\n\r\nexport const exportSVG = (svgElement, fileName) => {\r\n    var svg = svgElement;\r\n    var svgString;\r\n    if (window.ActiveXObject) {\r\n        svgString = svg.xml;\r\n    } else {\r\n        var oSerializer = new XMLSerializer();\r\n        svgString = oSerializer.serializeToString(svg);\r\n    }\r\n    generateLink(fileName + '.svg', 'data:image/svg+xml;utf8,' + svgString).click();\r\n}\r\n\r\nexport const exportText = (textString, fileName) => {\r\n    const blob = new Blob(\r\n        [textString], {\r\n            type: \"type/plain\"\r\n        }\r\n    );\r\n    const url = window.URL.createObjectURL(blob);\r\n    generateLink(fileName, url).click();\r\n}\r\n\r\n// replacer:  https://qiita.com/qoAop/items/57d35a41ef9629351c3c\r\nexport const exportJson = (json, fileName, replacer = null, indent = 4) => {\r\n    const blob = new Blob(\r\n        [JSON.stringify(json, replacer, indent)], {\r\n            type: \"application/json\"\r\n        }\r\n    );\r\n    const url = window.URL.createObjectURL(blob);\r\n    generateLink(fileName, url).click();\r\n}","import * as utils from \"./index\"\r\n\r\nexport class Modal {\r\n    constructor() {\r\n        this.x = 100;\r\n        this.y = 100;\r\n        this.layerX = 0;\r\n        this.layerY = 0;\r\n        this.width = 100;\r\n        this.height = 200;\r\n        this.modal_class = \"def-modal-class\"\r\n    }\r\n    makeModal() {\r\n        const body = utils.select(\"body\")\r\n            .on(\"dragover\", () => {\r\n                event.preventDefault();\r\n                console.log(event);\r\n            });\r\n\r\n        const box = body.create(\"div\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"left\", this.x + \"px\")\r\n            .style(\"top\", this.y + \"px\")\r\n            .style(\"height\", this.height + \"px\")\r\n            .style(\"width\", this.width + \"px\")\r\n            .style(\"z-index\", 10)\r\n            .style(\"background-color\", \"rgb(255,0,0)\");\r\n\r\n        const boxHeader = box.create(\"div\")\r\n            .attr(\"draggable\", \"true\")\r\n            .style(\"position\", \"relative\")\r\n            .style(\"height\", \"30px\")\r\n            .style(\"width\", this.width + \"px\")\r\n            .setClass(this.modal_class)\r\n            .style(\"background-color\", \"rgb(200,200,200)\")\r\n            .on(\"dragend\", () => {\r\n                box\r\n                    .style(\"left\", event.pageX - this.layerX + \"px\")\r\n                    .style(\"top\", event.pageY - this.layerY + \"px\")\r\n            })\r\n            .on(\"dragstart\", () => {\r\n                this.layerX = event.layerX;\r\n                this.layerY = event.layerY;\r\n                console.log(event);\r\n                event.dataTransfer.setDragImage(this.box, 0, 0);\r\n            })\r\n        box.create(\"div\")\r\n            .style(\"position\", \"relative\")\r\n            .style(\"background-color\", \"rgb(20,0,0)\")\r\n            .style(\"width\", this.width)\r\n            .style(\"height\", \"200px\")\r\n\r\n        /*\r\n                box.on(\"mousedown\", () => {\r\n                    this.dragging = true;\r\n                })\r\n                box.on(\"mouseup\", () => {\r\n                    this.dragging = false;\r\n                })\r\n                box.on(\"mouseleave\", () => {\r\n                    this.dragging = false;\r\n                })\r\n                box.on(\"mousemove\", () => {\r\n                    if (this.dragging) {\r\n                        this.x += event.movementX;\r\n                        this.y += event.movementY;\r\n                        box\r\n                            .style(\"left\", this.x + \"px\")\r\n                            .style(\"top\", this.y + \"px\")\r\n                    }\r\n                })\r\n\r\n            */\r\n    }\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    id: \"def\",\r\n    setSize: false,\r\n    height: 600,\r\n    width: 600,\r\n    seqHeight: 25,\r\n    isGrouping: true,\r\n    colorScheme: col.TAYLOR_COLOR,\r\n    header: {\r\n        ...size,\r\n        ...font,\r\n        height: 100,\r\n        top: 10,\r\n        enable: true,\r\n    },\r\n    seqLogo: {\r\n        enable: true,\r\n    },\r\n    nonGapRate: {\r\n        enable: true,\r\n        left: 10,\r\n        top: 10,\r\n        bottom: 0,\r\n        baseColor: \"rgb(120,120,120)\",\r\n        highColor: \"rgb(30, 30, 250)\",\r\n        th: 1,\r\n    },\r\n    label: {\r\n        ...size,\r\n        ...font,\r\n        fontSize: 13,\r\n        left: 10,\r\n        top: 0,\r\n        width: 300\r\n    },\r\n    sequence: {\r\n        ...size,\r\n        ...font,\r\n        fontSize: 12,\r\n        left: 10,\r\n        right: 10,\r\n        top: 0,\r\n        width: 480,\r\n        topMargin: 0,\r\n        bottomMargin: 0\r\n    },\r\n    scaleBar: {\r\n        ...font,\r\n        fontSize: 13,\r\n        height: 40,\r\n        enable: true,\r\n    }\r\n}","import * as color from \"./color\"\r\n\r\nconst deg90 = Math.PI / 2\r\n\r\nexport const setLineWidth = (ctx, lineWidth) => {\r\n    ctx.lineWidth = lineWidth\r\n}\r\n\r\nexport const setTextAlign = (ctx, align) => {\r\n    ctx.textAlign = align; // center\r\n}\r\n\r\nexport const setFillStyle = (ctx, fStyle) => {\r\n    ctx.fillStyle = fStyle;\r\n}\r\n\r\nexport const setStrokeStyle = (ctx, sStyle) => {\r\n    ctx.strokeStyle = sStyle;\r\n}\r\n\r\nexport const drawLine = (ctx, startX, endX, startY, endY, strokeStyle) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(startX, startY);\r\n    ctx.lineTo(endX, endY);\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.stroke();\r\n}\r\n\r\nexport const drawRect = (ctx, x, y, width, height, strokeStyle, lineWidth) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWidth;\r\n    ctx.strokeRect(x, y, width, height);\r\n}\r\n\r\nexport const drawArc = (ctx, x, y, r, startRad, endRad, angle) => {\r\n    let val = angle < 0 ? \"rgba(200,200,200)\" : color.COLER_ARR[angle];\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, startRad - deg90, endRad - deg90);\r\n    ctx.strokeStyle = val;\r\n    ctx.stroke();\r\n}\r\n\r\nexport const drawTxt = (ctx, text, x, y, font) => {\r\n    ctx.font = font\r\n    ctx.fillText(text, x, y);\r\n}\r\n\r\nexport const clear = (ctx, width, height) => {\r\n    ctx.clearRect(0, 0, width, height);\r\n}","import {\r\n    options\r\n} from \"./option\";\r\nimport * as drawer from \"../utils/canvas\"\r\n\r\nimport * as utils from \"../utils/index\";\r\n\r\nclass AlignmentPosition {\r\n    constructor(size) {\r\n        this.start = 0;\r\n        this.end = size;\r\n        this.size = size;\r\n        this.preStart = -1;\r\n        this.preEnd = -1;\r\n    }\r\n    update(size) {\r\n        this.start = 0;\r\n        this.end = size;\r\n        this.size = size;\r\n        this.preStart = -1;\r\n        this.preEnd = -1;\r\n    }\r\n}\r\n\r\nconst getGroup = (dicArr) => {\r\n    const _group = {};\r\n    let counter = 0;\r\n    utils.each(dicArr, (val, i, arr) => {\r\n        if (val[\"group\"] in _group) {\r\n            _group[val[\"group\"]].count++;\r\n            _group[val[\"group\"]].names.push(val[\"name\"])\r\n        } else {\r\n            _group[val[\"group\"]] = {\r\n                count: 1,\r\n                col: utils.getColors(counter++, 45),\r\n                names: [val[\"name\"]]\r\n            }\r\n        }\r\n    });\r\n    return _group;\r\n}\r\n\r\n\r\n\r\nexport class Alignment {\r\n    constructor(id, opt) {\r\n        this.height = 500;\r\n        this.width = 500;\r\n        this.mainCanvas = null;\r\n        this.isDragging = false;\r\n\r\n        this.id = id;\r\n        this.container = null;\r\n        this.inputJson = null;\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n\r\n        this.numSeq = 0;\r\n        this.group = null;\r\n\r\n        this.canvasHeight = 0;\r\n        this.headerContainer = null;\r\n        this.bodyContainer = null;\r\n        this.labelContainer = null;\r\n        this.labelDiv = null;\r\n        this.canvasContainer = null;\r\n        this.ctx = null;\r\n        this.alignmentPosition = null;\r\n        this.baseWidth = 0;\r\n        this.seqLength = 0;\r\n\r\n        // sortable and highlight\r\n        this.orderedAlignments = null;\r\n        this.highlightedIndicies = null;\r\n\r\n        // conserved region mode\r\n        this.isConservedRegionMode = false;\r\n        this.conservedRegionBooleanArr = null;\r\n        this.conservedRegionLength = 0;\r\n\r\n\r\n        // seqLog & 1 - gapRate\r\n        this.headerCanvas = null;\r\n        this.headerCtx = null;\r\n        this.seqStat = null;\r\n        this.gapRate = null;\r\n        this.shannonEntropyArr = null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {string} elementID without # \r\n     */\r\n    setContainer(elementID) {\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.id = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {json} json \r\n     */\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numSeq = json[\"sequences\"].length;\r\n        this.canvasHeight = this.numSeq * this.options.seqHeight + 50;\r\n        this.seqLength = this.inputJson[\"sequences\"][0][\"seq\"].length;\r\n        this.alignmentPosition = new AlignmentPosition(this.seqLength);\r\n        this.seqStat = utils.seqStat(this.inputJson[\"sequences\"]);\r\n        this.conservedRegionBooleanArr = utils.isConservedRegoin(this.seqStat);\r\n        this.conservedRegionLength = utils.conservedRegionLength(this.seqStat);\r\n        this.gapRate = utils.calcGapRate(this.seqStat, this.numSeq);\r\n        this.shannonEntropyArr = utils.calcShannonEntropy(this.seqStat, this.numSeq);\r\n\r\n        // grouping\r\n        if (this.options.isGrouping) {\r\n            this.group = getGroup(this.inputJson[\"sequences\"]);\r\n            let counter = 0;\r\n            for (const key in this.group) {\r\n                const name = key;\r\n                utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                    if (val.group === key) {\r\n                        val.order = counter++;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.orderedAlignments = new Array(this.inputJson[\"sequences\"].length);\r\n        utils.each(this.inputJson[\"sequences\"], (alignment) => {\r\n            this.orderedAlignments[alignment.order] = alignment;\r\n        })\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this.ctx = this.mainCanvas.elements[0].getContext(\"2d\");\r\n\r\n        this._initHeader();\r\n        this._drawSequenceLabel();\r\n        this.drawSequences();\r\n    }\r\n\r\n    zoomInShowSequence() {\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start < 20) return;\r\n        this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n        this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n        this.alignmentPosition.start = 0;\r\n        this.alignmentPosition.end = 30;\r\n        this.drawSequences();\r\n    }\r\n\r\n    change2conservedRegion() {\r\n        this.isConservedRegionMode = true;\r\n        this.alignmentPosition.update(this.conservedRegionLength);\r\n        this.drawSequences();\r\n    }\r\n\r\n    change2allRegion() {\r\n        this.isConservedRegionMode = false;\r\n        this.alignmentPosition.update(this.seqLength);\r\n        this.drawSequences();\r\n    }\r\n\r\n    saveRawJson() {\r\n        utils.exportJson(this.inputJson, `all_rawJson_${this.id}.json`);\r\n    }\r\n\r\n    saveAllSequence() {\r\n        utils.exportText(utils.getAllSequenceAsFasta(this.inputJson[\"sequences\"]), `all_alignments_${this.id}.fas`);\r\n    }\r\n\r\n    saveConservedRegion() {\r\n        utils.exportText(utils.getConservedRegionAsFasta(this.inputJson[\"sequences\"], this.conservedRegionBooleanArr), `conservedRegion_alignments_${this.id}.fas`);\r\n    }\r\n\r\n    saveVisualizedRegion() {\r\n        if (this.isConservedRegionMode) {\r\n            const seqs = []\r\n            utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                const conservedSeq = utils.getTrueArr(val.seq.split(\"\"), this.conservedRegionBooleanArr);\r\n                const targetSeq = conservedSeq.slice(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5)).join(\"\");\r\n                seqs.push({\r\n                    name: val.name,\r\n                    seq: targetSeq\r\n                });\r\n            });\r\n            utils.exportText(utils.getAllSequenceAsFasta(seqs), `visualizedRegion_conserved_${this.id}.fas`);\r\n\r\n        } else {\r\n            const seqs = [];\r\n            utils.each(this.inputJson[\"sequences\"], (val) => {\r\n                const targetSeq = val.seq.substr(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5) - parseInt(this.alignmentPosition.start + 0.5));\r\n                seqs.push({\r\n                    name: val.name,\r\n                    seq: targetSeq\r\n                });\r\n            });\r\n            utils.exportText(utils.getAllSequenceAsFasta(seqs), `visualizedRegion_${this.id}.fas`);\r\n        }\r\n    }\r\n\r\n\r\n    _DOMcreate() {\r\n        this.options.sequence.width = this.width - this.options.label.width - this.options.label.left - this.options.sequence.left - this.options.sequence.right;\r\n\r\n        this.headerContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.id}_header`)\r\n        //    .html(\"Alignment Viewer Header\");\r\n\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.id}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.id}_canvasContainer`)\r\n            .style(\"position\", \"relative\")\r\n            .style(\"height\", `${this.canvasHeight}px`);\r\n\r\n        this.labelContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.id}_label`)\r\n            //.style(\"position\", \"absolute\")\r\n            //.style(\"height\", `${this.canvasHeight}px`)\r\n            //.style(\"width\", `${this.options.label.width}px`)\r\n            .style(\"margin-left\", `${this.options.label.left}px`)\r\n            .style(\"margin-top\", (this.options.label.top + this.options.scaleBar.height) + \"px\")\r\n\r\n        this.mainCanvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.id}_canvas`)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"left\", (this.options.label.width + this.options.label.left) + \"px\")\r\n            .style(\"top\", this.options.sequence.top + \"px\")\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width - this.options.label.width - this.options.label.left);\r\n\r\n        this.mainCanvas\r\n            .on(\"mousemove\", () => {\r\n                event.preventDefault();\r\n                if (this.isDragging) {\r\n                    this._move(event.movementX / window.devicePixelRatio);\r\n                }\r\n            })\r\n            .on(\"mousewheel\", () => {\r\n                event.preventDefault();\r\n                if (event.deltaY > 0) {\r\n                    this._zoomOut();\r\n                } else if (event.deltaY < 0) {\r\n                    this._zoomIn();\r\n                }\r\n            })\r\n            .on(\"mousedown\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = true;\r\n                }\r\n            })\r\n            .on(\"mouseup\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = false;\r\n\r\n                }\r\n            })\r\n            .on(\"mouseout\", () => {\r\n                this.isDragging = false;\r\n            })\r\n            .on(\"dblclick\", () => {\r\n                this._resetZoom();\r\n            });\r\n    }\r\n\r\n    /*    _sortAlignments(newIndex, oldIndex) {\r\n            const target = this.orderedAlignments[oldIndex]\r\n            this.orderedAlignments.splice(oldIndex, 1);\r\n            this.orderedAlignments.splice(newIndex, 0, target);\r\n            this._drawSequences();\r\n        }\r\n    */\r\n\r\n    _initHeader() {\r\n        if (this.options.header.enable) {\r\n            this.headerCanvas = this.headerContainer\r\n                .style(\"position\", \"relative\")\r\n                .style(\"height\", this.options.header.height + 2 + \"px\")\r\n                .create(\"canvas\")\r\n                .attr(\"height\", this.options.header.height + 2 + \"px\")\r\n                .attr(\"width\", this.width)\r\n                .style(\"position\", \"absolute\");\r\n            this.headerCtx = this.headerCanvas.elements[0].getContext(\"2d\");\r\n            this.options.header.left = this.options.sequence.left + this.options.label.width + this.options.label.left + this.options.label.right;\r\n        }\r\n    }\r\n\r\n\r\n    _updateSortInfo(sortable) {\r\n        const sortArr = sortable.toArray();\r\n        utils.each(this.inputJson[\"sequences\"], (val) => {\r\n            val.order = sortArr.indexOf(val.name)\r\n        });\r\n        this.drawSequences();\r\n    }\r\n\r\n    drawSequences() {\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        const seqWidth = this.options.seqHeight - this.options.sequence.topMargin - this.options.sequence.bottomMargin;\r\n        drawer.setLineWidth(this.ctx, seqWidth);\r\n        drawer.setTextAlign(this.ctx, \"center\");\r\n\r\n        utils.each(this.inputJson[\"sequences\"], (val) => {\r\n            this._drawSequence(val);\r\n        });\r\n\r\n        this._drawHighlightRect();\r\n        this._drawScaleBar();\r\n        this._drawHeader();\r\n\r\n    }\r\n\r\n    _drawSequence(alignment) {\r\n        const seqWidth = this.options.seqHeight - this.options.sequence.topMargin - this.options.sequence.bottomMargin;\r\n        const y = this.options.scaleBar.height + this.options.seqHeight * (alignment.order + 1) + this.options.sequence.topMargin - seqWidth / 2;\r\n        let seq = [];\r\n        if (this.isConservedRegionMode) {\r\n            const conservedSeq = utils.getTrueArr(alignment[\"seq\"].split(\"\"), this.conservedRegionBooleanArr);\r\n            seq = conservedSeq.slice(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5));\r\n        } else {\r\n            seq = alignment[\"seq\"].substr(parseInt(this.alignmentPosition.start + 0.5), parseInt(this.alignmentPosition.end + 0.5) - parseInt(this.alignmentPosition.start + 0.5)).split(\"\");\r\n        }\r\n        if (seq.length == 0) return;\r\n        let seqLength = seq.length;\r\n        //        if (seq.length < 10) seqLength = 10;\r\n        this.baseWidth = (this.options.sequence.width) / seqLength;\r\n\r\n        drawer.setFillStyle(this.ctx, \"black\");\r\n        this.ctx.font = this.options.sequence.fontSize + \"px Arial serif\";\r\n\r\n        if (this.baseWidth < 10) {\r\n            utils.each(seq, (val, i) => {\r\n                drawer.drawLine(this.ctx, this.options.sequence.left + i * this.baseWidth, this.options.sequence.left + (i + 1) * this.baseWidth, y, y, this.options.colorScheme[val]);\r\n            });\r\n        } else {\r\n            utils.each(seq, (val, i) => {\r\n                drawer.drawLine(this.ctx, this.options.sequence.left + i * this.baseWidth, this.options.sequence.left + (i + 1) * this.baseWidth, y, y, this.options.colorScheme[val]);\r\n                this.ctx.fillText(val, this.options.sequence.left + (i * this.baseWidth) + this.baseWidth / 2, y + this.options.sequence.fontSize * 0.33);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    _drawSequenceLabel() {\r\n        utils.each(this.orderedAlignments, (alignment, i) => {\r\n            const y = this.options.seqHeight * (i + 1);\r\n            this.labelDiv = this.labelContainer.create(\"div\")\r\n                //.style(\"position\", \"absolute\")\r\n                //.style(\"top\", y + \"px\")\r\n                .attr(\"data-id\", alignment.name)\r\n                .style(\"font-size\", this.options.label.fontSize + \"px\")\r\n                .style(\"color\", this.group[alignment[\"group\"]].col)\r\n                .style(\"height\", this.options.seqHeight + \"px\")\r\n\r\n            const label_p = this.labelDiv.create(\"p\").style(\"margin\", \"0\")\r\n                .style(\"height\", this.options.seqHeight + \"px\");\r\n            label_p.create(\"span\")\r\n                .setClass(\"handle fas fa-expand-arrows-alt\")\r\n                .html(\" \")\r\n\r\n            label_p.elements[0].innerHTML += (alignment.name + \"_\" + alignment[\"group\"]);\r\n        });\r\n    }\r\n\r\n    _drawHighlightRect() {\r\n        utils.each(this.highlightedIndicies, (val) => {\r\n            const i = val.index;\r\n            const y = this.options.scaleBar.height + this.options.seqHeight * (i) + this.options.sequence.topMargin;\r\n            drawer.drawRect(this.ctx, this.options.sequence.left, y, this.options.sequence.width, this.options.seqHeight, \"red\", 3);\r\n        });\r\n    }\r\n\r\n    _drawScaleBar() {\r\n        if (this.options.scaleBar.enable) {\r\n            drawer.setLineWidth(this.ctx, 1.5);\r\n\r\n            const s = this.alignmentPosition.start\r\n            const e = this.alignmentPosition.end\r\n            const size = e - s;\r\n\r\n            let numBreaks = this.options.sequence.width > 500 ? 10 : 5;\r\n            let stepSize = parseInt(size / numBreaks);\r\n            numBreaks = parseInt(size / stepSize);\r\n\r\n            if (size < 30 && this.baseWidth > 20) {\r\n                numBreaks = size;\r\n                stepSize = 1;\r\n            }\r\n            let startX = this.options.sequence.left;\r\n            let startY = this.options.scaleBar.height - this.options.scaleBar.fontSize / 2;\r\n\r\n            for (let i = 0; i < numBreaks; i++) {\r\n                startX = this.options.sequence.left + i * stepSize * this.baseWidth + this.baseWidth / 2;\r\n                drawer.drawTxt(this.ctx, parseInt(s + i * stepSize + 0.5 + 1), startX, startY, this.options.scaleBar.fontSize + \"px Arial serif\");\r\n                drawer.drawLine(this.ctx, startX, startX, this.options.scaleBar.height, startY + 1, \"grey\");\r\n            }\r\n            if (stepSize !== 1) {\r\n                startX = this.options.sequence.left + parseInt(size + 0.5) * this.baseWidth - this.baseWidth / 2;\r\n                drawer.drawTxt(this.ctx, parseInt(e), startX, startY, this.options.scaleBar.fontSize + \"px Arial serif\");\r\n                drawer.drawLine(this.ctx, startX, startX, this.options.scaleBar.height, startY + 1, \"grey\");\r\n            }\r\n        }\r\n    }\r\n\r\n    _drawHeader() {\r\n        if (this.options.header.enable) {\r\n            const leftMergin = 10;\r\n            drawer.clear(this.headerCtx, this.width, this.options.header.height);\r\n            this._drawNonGrapRate();\r\n            this._drawSeqLogo();\r\n\r\n            drawer.setLineWidth(this.headerCtx, 1);\r\n            drawer.setStrokeStyle(this.headerCtx, \"black\");\r\n            const startX = this.options.header.left;\r\n            const startY = this.options.header.top;\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, startX - leftMergin, this.options.header.height + 1, startY);\r\n            drawer.drawLine(this.headerCtx, this.width - 1, this.width - 1, this.options.header.height + 1, startY);\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, this.width, startY, startY);\r\n            drawer.drawLine(this.headerCtx, startX - leftMergin, this.width, this.options.header.height + 1, this.options.header.height + 1);\r\n        }\r\n    }\r\n\r\n    _drawSeqLogo() {\r\n        if (this.options.seqLogo.enable && this.baseWidth > 10) {\r\n            // draw Y axis\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setFillStyle(this.headerCtx, \"black\");\r\n\r\n            this.headerCtx.rotate(Math.PI * 3 / 2);\r\n            drawer.drawTxt(this.headerCtx, \"bits\", -(this.options.header.height / 2), this.options.header.left - 35, \"14px sans-serif\")\r\n            this.headerCtx.rotate(Math.PI * 1 / 2);\r\n            drawer.setTextAlign(this.headerCtx, \"right\");\r\n            drawer.drawTxt(this.headerCtx, \"0\", this.options.header.left - 14, this.options.header.height, \"12px sans-serif\")\r\n            drawer.drawTxt(this.headerCtx, \"4.5\", this.options.header.left - 14, this.options.header.top + 6, \"12px sans-serif\")\r\n\r\n            drawer.setLineWidth(this.headerCtx, 1);\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n\r\n            this.headerCtx.font = '900 ' + 30 * (this.options.header.height - this.options.header.top) / 100 + 'px \"Arial Black\", Arial, Gadget, sans-serif';\r\n            const maxVal = Math.log2(22);\r\n            const logoHeight = this.options.header.height - this.options.header.top - 1;\r\n            const baseHeight = logoHeight / maxVal;\r\n\r\n            const startX = this.options.header.left;\r\n            const startY = this.options.header.top + 1;\r\n\r\n            const wSize = this.baseWidth;\r\n\r\n            let entropies = [];\r\n            if (this.isConservedRegionMode) {\r\n                entropies = utils.getTrueArr(this.shannonEntropyArr, this.conservedRegionBooleanArr);\r\n            } else {\r\n                entropies = this.shannonEntropyArr;\r\n            }\r\n\r\n            utils.each(entropies, (site, i) => {\r\n                if (i >= parseInt(this.alignmentPosition.start + 0.5) && i <= parseInt(this.alignmentPosition.end + 0.5 - 1)) {\r\n                    const buf = utils.filterAndSortEntroy(site);\r\n                    let preHeight = logoHeight * (1 - buf[\"sum\"] / maxVal);\r\n\r\n                    utils.each(buf[\"res\"], (val) => {\r\n                        const text = val.name.replace(\"-\", \"\\\\\");\r\n\r\n                        let height = (logoHeight) * val.value / maxVal;\r\n                        let hRate = height / baseHeight;\r\n\r\n                        this.headerCtx.transform(1, 0, 0, hRate, startX + wSize / 2 + wSize * (i - parseInt(this.alignmentPosition.start + 0.5)), startY + height + preHeight);\r\n                        this.headerCtx.fillStyle = utils.TAYLOR_COLOR[text];\r\n                        this.headerCtx.fillText(text, 0, 0, wSize);\r\n                        this.headerCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n                        preHeight = height + preHeight;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  draw 1 - gap rate\r\n     */\r\n    _drawNonGrapRate() {\r\n        if (this.options.nonGapRate.enable && this.baseWidth <= 10 && !this.isConservedRegionMode) {\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setFillStyle(this.headerCtx, \"black\");\r\n\r\n            // draw Y axis\r\n            this.headerCtx.rotate(Math.PI * 3 / 2);\r\n            drawer.drawTxt(this.headerCtx, \"1 - gap rate\", -(this.options.header.height / 2), this.options.header.left - 35, \"14px sans-serif\")\r\n            this.headerCtx.rotate(Math.PI * 1 / 2);\r\n            drawer.setTextAlign(this.headerCtx, \"right\");\r\n            drawer.drawTxt(this.headerCtx, \"0\", this.options.header.left - 14, this.options.header.height, \"12px sans-serif\")\r\n            drawer.drawTxt(this.headerCtx, \"1\", this.options.header.left - 14, this.options.header.top + 6, \"12px sans-serif\")\r\n\r\n            drawer.setTextAlign(this.headerCtx, \"center\");\r\n            drawer.setLineWidth(this.headerCtx, this.baseWidth);\r\n\r\n            const bottomLineY = this.options.header.height;\r\n            const maxVal = this.options.header.height - this.options.header.top - 1;\r\n            utils.each(this.gapRate, (val, i) => {\r\n                if (i >= parseInt(this.alignmentPosition.start + 0.5) && i <= parseInt(this.alignmentPosition.end + 0.5 - 1)) {\r\n                    const x = this.options.header.left + (i - parseInt(this.alignmentPosition.start + 0.5)) * this.baseWidth + this.baseWidth * 0.5;\r\n                    drawer.drawLine(this.headerCtx, x, x, bottomLineY, bottomLineY - maxVal * (1 - val), (1 - val >= this.options.nonGapRate.th) ? this.options.nonGapRate.highColor : this.options.nonGapRate.baseColor);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // zoom functions\r\n    _zoomIn() {\r\n        let zoomSize = this.baseWidth < 5 ? 20 : (this.baseWidth < 10 ? 10 : 5);\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start > 30) {\r\n            this.alignmentPosition.start += zoomSize;\r\n            this.alignmentPosition.end -= zoomSize;\r\n            this.drawSequences();\r\n        } else if (this.alignmentPosition.end - this.alignmentPosition.start > 10) {\r\n            this.alignmentPosition.start += 2;\r\n            this.alignmentPosition.end -= 2;\r\n            this.drawSequences();\r\n        } else if (this.alignmentPosition.end - this.alignmentPosition.start > 2) {\r\n            this.alignmentPosition.start += 1;\r\n            this.alignmentPosition.end -= 1;\r\n            this.drawSequences();\r\n        }\r\n    }\r\n\r\n    _zoomOut() {\r\n        if (this.alignmentPosition.end - this.alignmentPosition.start < 30) {\r\n            this.alignmentPosition.start -= 2;\r\n            this.alignmentPosition.end += 2;\r\n\r\n        } else {\r\n            let zoomSize = this.baseWidth < 5 ? 20 : (this.baseWidth < 10 ? 10 : 5);\r\n            if (this.alignmentPosition.start == 0 && this.alignmentPosition.end == this.alignmentPosition.size) return;\r\n            this.alignmentPosition.start -= zoomSize;\r\n            this.alignmentPosition.end += zoomSize;\r\n            if (this.alignmentPosition.start < 0) {\r\n                this.alignmentPosition.start = 0;\r\n            }\r\n            if (this.alignmentPosition.end > this.alignmentPosition.size) {\r\n                this.alignmentPosition.end = this.alignmentPosition.size;\r\n            }\r\n        }\r\n        this.drawSequences();\r\n    }\r\n\r\n    _move(x) {\r\n        if (x === 0) return;\r\n        let moveSize = x / (this.baseWidth);\r\n        this.alignmentPosition.start -= moveSize;\r\n        this.alignmentPosition.end -= moveSize;\r\n        if (this.alignmentPosition.end > this.alignmentPosition.size) {\r\n            this.alignmentPosition.start += moveSize;\r\n            this.alignmentPosition.end = this.alignmentPosition.size;\r\n        }\r\n        if (this.alignmentPosition.start < 0) {\r\n            this.alignmentPosition.start = 0;\r\n            this.alignmentPosition.end += moveSize;\r\n        }\r\n        if (parseInt(this.alignmentPosition.start + 0.5) !== parseInt(this.alignmentPosition.preStart + 0.5) ||\r\n            parseInt(this.alignmentPosition.end - this.alignmentPosition.start + 0.5) !== parseInt(this.alignmentPosition.preEnd - this.alignmentPosition.preStart + 0.5)) {\r\n            this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n            this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n\r\n            this.drawSequences();\r\n        }\r\n    }\r\n\r\n    _resetZoom() {\r\n        this.alignmentPosition.preStart = this.alignmentPosition.start;\r\n        this.alignmentPosition.preEnd = this.alignmentPosition.end;\r\n        this.alignmentPosition.start = 0;\r\n        this.alignmentPosition.end = this.alignmentPosition.size;\r\n        this.drawSequences();\r\n    }\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    elementId: \"def\",\r\n    setSize: false,\r\n    height: 600,\r\n    width: 600,\r\n    outerRadius: 400,\r\n    innnerRadius: 20,\r\n    ringMargin: 0,\r\n    highlighterEnable: true,\r\n}\r\n\r\nconst color = {\r\n    colorScheme: col.TAYLOR_COLOR,\r\n}","import {\r\n    options\r\n} from \"./option\"\r\nimport * as drawer from \"../utils/canvas\"\r\nimport * as utils from \"../utils/index\";\r\n\r\n\r\n\r\nexport class CircularGenomeBrowser {\r\n    constructor(opt) {\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n\r\n        this.container = null;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.halfX = 0;\r\n        this.halfY = 0;\r\n\r\n        this.inputJson = null;\r\n        this.numGenomes = null;\r\n\r\n        this.maxRadius = 0\r\n        this.ringSize = 0\r\n\r\n        this.highlightCanvas = null;\r\n        this.highlighter = null;\r\n    }\r\n\r\n    setContainer(elementID) {\r\n        console.log(\"load element: \" + elementID);\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.elementId = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n            this.options.outerRadius = this.width / 2 - 50;\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n        }\r\n        this.canvasHeight = this.width;\r\n        this.halfX = this.width / 2;\r\n        this.halfY = this.canvasHeight / 2;\r\n    }\r\n\r\n    /**\r\n     * @param {json} json \r\n     */\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numGenomes = json[\"genomes\"].length;\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this.ctx = this.mainCanvas.elements[0].getContext(\"2d\");\r\n        if (this.options.highlighterEnable) {\r\n            this.highlighter = new Highlighter(this.highlightCanvas, this.width, this.canvasHeight, this.inputJson);\r\n        }\r\n        this.drawCircularGenomes();\r\n    }\r\n\r\n    _DOMcreate() {\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.elementId}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.elementId}_canvasContainer`)\r\n            .style(\"height\", `${this.canvasHeight}px`);\r\n\r\n        this.mainCanvas = this.canvasContainer.create(\"canvas\")\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .setID(`${this.options.elementId}_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"left\", \"0\");\r\n\r\n        this.highlightCanvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.elementId}_highlight_canvas`)\r\n            .attr(\"height\", this.canvasHeight)\r\n            .attr(\"width\", this.width)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"top\", \"0\")\r\n            .style(\"left\", \"0\");\r\n    }\r\n\r\n    redrawCircularGenomes() {\r\n        this._drawKaryotype();\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        this._drawCircularGenomes()\r\n    }\r\n\r\n    drawCircularGenomes() {\r\n        this._init_radius();\r\n        drawer.clear(this.ctx, this.width, this.canvasHeight);\r\n        this._drawKaryotype();\r\n        this._drawCircularGenomes()\r\n    }\r\n\r\n    _init_radius() {\r\n        this.ringSize = ((this.options.outerRadius - (this.numGenomes - 1) * this.options.ringMargin - this.options.innnerRadius) / this.numGenomes);\r\n        if (this.ringSize < 0) {\r\n            this.options.ringMargin = 1;\r\n            this.ringSize = ((this.options.outerRadius - (this.numGenomes - 1) * this.options.ringMargin - this.options.innnerRadius) / this.numGenomes);\r\n        }\r\n        if (this.ringSize < 0) {\r\n            this.options.ringMargin = 0;\r\n            this.ringSize = ((this.options.outerRadius - this.options.innnerRadius) / this.numGenomes);\r\n        }\r\n\r\n        console.log(\"Ring size: \" + this.ringSize);\r\n        console.log('this.options.ringMargin:', this.options.ringMargin);\r\n        this.maxRadius = this.options.outerRadius + this.ringSize / 2;\r\n        if (this.highlighter) this.highlighter.maxRadius = this.maxRadius + 10;\r\n        for (let i = 0; i < this.numGenomes; i++) {\r\n            this.inputJson.genomes[i][\"r\"] = this.options.outerRadius - this.inputJson.genomes[i].order * (this.ringSize + this.options.ringMargin)\r\n        }\r\n    }\r\n\r\n    _drawCircularGenomes() {\r\n        drawer.setLineWidth(this.ctx, this.ringSize);\r\n        for (let i = 0; i < this.numGenomes; i++) {\r\n            for (let l = 0; l < this.inputJson.genomes[i].genes.length; l++) {\r\n                if (Math.abs(this.inputJson.genomes[i].genes[l][\"start_rotated_rad\"] - this.inputJson.genomes[i].genes[l][\"end_rotated_rad\"]) < 1) {\r\n                    drawer.drawArc(this.ctx, this.halfX, this.halfY, this.inputJson.genomes[i][\"r\"], this.inputJson.genomes[i].genes[l][\"start_rotated_rad\"], this.inputJson.genomes[i].genes[l][\"end_rotated_rad\"], this.inputJson.genomes[i].genes[l].angle);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _drawKaryotype() {\r\n        drawer.setLineWidth(this.ctx, 5);\r\n        for (let i = 0; i < 360; i++) {\r\n            drawer.drawArc(this.ctx, this.halfX, this.halfY, this.maxRadius, this.convertDeg2Rad(i), this.convertDeg2Rad(i + 1), i);\r\n        }\r\n    }\r\n\r\n    convertDeg2Rad(deg) {\r\n        return 2 * Math.PI * deg / 360;\r\n    }\r\n}\r\n\r\nclass Highlighter {\r\n    constructor(canvas, width, height, json) {\r\n        this.canvas = canvas;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.halfX = this.width / 2;\r\n        this.halfY = this.height / 2;\r\n        this.maxRadius = 0;\r\n        this.ctx = this.canvas.elements[0].getContext(\"2d\");\r\n        this.inputJson = json;\r\n        this.isHighlightLock = false;\r\n        this.zoomSize = 0.1;\r\n        this.updateFunction = null;\r\n\r\n        this.zoomStart = 0;\r\n        this.zoomEnd = 0;\r\n        this._init();\r\n    }\r\n    clear() {\r\n        drawer.clear(this.ctx, this.width, this.height);\r\n    }\r\n    showArc(start, end) {\r\n        this.clear();\r\n        this.setLineWidth(5);\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.halfX, this.halfY);\r\n        this.ctx.arc(this.halfX, this.halfY, this.maxRadius, start, end);\r\n        this.ctx.fillStyle = \"rgba(50,50,50,0.5)\";\r\n        this.ctx.strokeStyle = \"rgba(50,50,50, 0.7)\";\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.ctx.stroke();\r\n        this.ctx.restore();\r\n    }\r\n    showArcRegions(r, ringSize, start, end) {\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.halfX, this.halfY, r + ringSize / 2, start, end);\r\n        this.ctx.lineTo(this.halfX + (r - ringSize / 2) * Math.cos(end), this.halfY + (r - ringSize / 2) * Math.sin(end));\r\n        this.ctx.arc(this.halfX, this.halfY, r - ringSize / 2, end, start, true);\r\n        this.ctx.lineTo(this.halfX + (r + ringSize / 2) * Math.cos(start), this.halfY + (r + ringSize / 2) * Math.sin(start));\r\n        this.ctx.stroke();\r\n        this.ctx.fill();\r\n    }\r\n    setLineWidth(x) {\r\n        drawer.setLineWidth(this.ctx, x);\r\n    }\r\n\r\n    setUpdateFunction(func) {\r\n        this.updateFunction = func;\r\n    }\r\n\r\n    _init() {\r\n        this.canvas\r\n            .on(\"mousemove\", () => {\r\n                if (!this.isHighlightLock) {\r\n                    const xy = this.canvas.mouse;\r\n                    const angle = this._getAngleFromMousePosition(xy);\r\n                    this.zoomStart = angle - this.zoomSize;\r\n                    this.zoomEnd = angle + this.zoomSize;\r\n                    this.showArc(this.zoomStart, this.zoomEnd);\r\n                }\r\n            })\r\n            .on(\"mouseleave\", () => {\r\n                if (!this.isHighlightLock) {\r\n                    this.clear();\r\n                }\r\n            })\r\n            .on(\"dblclick\", () => {\r\n                event.preventDefault();\r\n            })\r\n\r\n            .on(\"click\", () => {\r\n                event.preventDefault();\r\n                if (!this.isHighlightLock) {\r\n                    this.isHighlightLock = true;\r\n                    if (this.updateFunction) {\r\n                        this.updateFunction(this.zoomStart, this.zoomEnd);\r\n                    }\r\n                } else {\r\n                    this.isHighlightLock = false;\r\n                }\r\n            });\r\n    }\r\n    _getAngleFromMousePosition(xy) {\r\n        let x = xy[0] - this.halfX;\r\n        let y = xy[1] - this.halfX;\r\n        let tan = y / x;\r\n        let angle = Math.atan(tan);\r\n        if (x < 0) {\r\n            return angle + Math.PI;\r\n        } else {\r\n            return angle;\r\n        }\r\n    }\r\n\r\n}","import * as col from \"../utils/color\"\r\nconst size = {\r\n    width: 0,\r\n    height: 0,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n}\r\n\r\nconst font = {\r\n    fontSize: 13\r\n}\r\n\r\nexport const options = {\r\n    elementId: \"def\",\r\n    setSize: false,\r\n    height: 600,\r\n    width: 600,\r\n    seqHeight: 40, // cdsHeight * 2 + genomeHeight + marginY\r\n    margin: 4,\r\n    label: {\r\n        top: 10,\r\n        left: 20,\r\n        width: 200,\r\n    },\r\n    sequence: {\r\n        fontSize: 10,\r\n        top: 10,\r\n        left: 20,\r\n        right: 20,\r\n        marginY: 1,\r\n        cdsHeight: 10,\r\n        genomeHeight: 15\r\n    },\r\n    tooltip: {\r\n        height: 75,\r\n    },\r\n    zoom: {\r\n        xs: 2,\r\n        sm: 10,\r\n        md: 50,\r\n        lg: 500,\r\n        xl: 5000,\r\n    }\r\n}\r\n\r\nconst color = {\r\n    colorScheme: col.TAYLOR_COLOR,\r\n}","export class SeqContainer {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    test() {\r\n        console.log(\"test ok\");\r\n    }\r\n\r\n}","import {\r\n    options\r\n} from \"./option\"\r\nimport {\r\n    SeqContainer\r\n} from \"./sequenceModel\"\r\nimport * as drawer from \"../utils/canvas\"\r\nimport * as utils from \"../utils/index\";\r\n\r\nconst param = (data) => {\r\n    return {\r\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n        mode: \"cors\", // no-cors, cors, *same-origin\r\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n        credentials: \"same-origin\", // include, same-origin, *omit\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n            // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        redirect: \"follow\", // manual, *follow, error\r\n        referrer: \"no-referrer\", // no-referrer, *client\r\n        body: JSON.stringify(data), // 本文のデータ型は \"Content-Type\" ヘッダーと一致する必要があります\r\n    }\r\n}\r\n\r\nconst locusTagPositionAPI = \"http://127.0.0.1:8000/hp72/api/genbank/position/locusTag/\"\r\nconst consensusIDPositionAPI = \"http://127.0.0.1:8000/hp72/api/consensus/id/\"\r\nconst getGenomeRangeAPI = \"http://127.0.0.1:8000/hp72/api/genome/multiple\"\r\n\r\n\r\nconst test = (input, init) => {\r\n    return fetch(input, init).then((response) => {\r\n        if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\r\n        return response.json();\r\n    });\r\n}\r\n\r\nexport class LinearGenomeBrowser {\r\n    constructor(opt) {\r\n        this.options = {\r\n            ...options,\r\n            ...opt,\r\n        }\r\n        this.start = 2600;\r\n        this.end = 2700;\r\n        this.seqWidthRatio = 1;\r\n        this.alignedSizeList = [];\r\n        this.genomeSizeRate = [];\r\n        this.baseGenomeSize = 0;\r\n        this.isDragging = false;\r\n        var seqContainer = new SeqContainer();\r\n    }\r\n\r\n    setRange(start, end) {\r\n        this.resetAlignment();\r\n        console.log(\"working set range\");\r\n        this.start = (start + Math.PI / 2) / (Math.PI * 2) * this.inputJson.consensus_genome_size;\r\n        this.end = (end + Math.PI / 2) / (Math.PI * 2) * this.inputJson.consensus_genome_size;\r\n        this.redrawCDSs();\r\n    }\r\n\r\n    setContainer(elementID) {\r\n        console.log(\"load element: \" + elementID);\r\n        this.container = utils.selectID(elementID);\r\n        this.container.html(\"\");\r\n        this.options.elementId = elementID;\r\n        if (!this.options.setSize) {\r\n            this.width = this.container.elements[0].clientWidth;\r\n            this.height = this.container.elements[0].clientHeight;\r\n            this.svgWidth = this.width - this.options.label.width - this.options.label.left - this.options.sequence.left - this.options.sequence.right;\r\n            console.log(this.width + \" \" + this.svgWidth);\r\n        } else {\r\n            this.height = this.options.height;\r\n            this.width = this.options.width;\r\n            this.svgWidth = this.width - this.options.label.width - this.options.label.left - this.options.sequence.left - this.options.sequence.right;\r\n        }\r\n    }\r\n\r\n    setJson(json) {\r\n        this.inputJson = json;\r\n        this.numGenomes = json[\"genomes\"].length;\r\n        this.svgHeight = (this.options.seqHeight + this.options.margin) * this.numGenomes;\r\n        this.resetAlignment();\r\n    }\r\n\r\n    resetAlignment() {\r\n        this.baseGenomeSize = this.inputJson[\"consensus_genome_size\"];\r\n        this.alignedSizeList = new Array(this.numGenomes);\r\n        this.alignedSizeList.fill(0)\r\n        this.genomeSizeRate = [];\r\n        utils.each(this.inputJson[\"genomes\"], (genome) => {\r\n            this.genomeSizeRate.push(genome[\"genome_size\"] / this.inputJson[\"consensus_genome_size\"]);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this._DOMcreate();\r\n        this._initSvg();\r\n        this.drawLinearGenomes();\r\n    }\r\n\r\n    drawLinearGenomes() {\r\n        this._clear();\r\n        this._drawLabels();\r\n        this._drawCDSBlocks();\r\n        this._drawGenomicSequences();\r\n    }\r\n\r\n    redrawCDSs() {\r\n        this._clear();\r\n        this._drawCDSBlocks();\r\n        this._drawGenomicSequences();\r\n    }\r\n\r\n    _DOMcreate() {\r\n        this.headerContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.elementId}_header`)\r\n        //    .html(\"Alignment Viewer Header\");\r\n\r\n        this.bodyContainer = this.container.create(\"div\")\r\n            .setID(`${this.options.elementId}_body`)\r\n            .style(\"position\", \"relative\")\r\n            .setClass(\"d-flex flex-row\")\r\n\r\n        this.canvasContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.elementId}_canvasContainer`)\r\n            .style(\"position\", \"relative\")\r\n            .style(\"height\", `${this.svgHeight}px`);\r\n\r\n        this.labelContainer = this.bodyContainer.create(\"div\")\r\n            .setID(`${this.options.elementId}_label`)\r\n            //.style(\"position\", \"absolute\")\r\n            //.style(\"height\", `${this.svgHeight}px`)\r\n            //.style(\"width\", `${this.options.label.width}px`)\r\n            .style(\"margin-left\", `${this.options.label.left}px`)\r\n            .style(\"margin-top\", `${this.options.label.top}px`)\r\n\r\n        this.mainSvg = this.canvasContainer.create(\"svg\")\r\n            .setID(`${this.options.elementId}_svg`)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"left\", (this.options.label.width + this.options.label.left) + \"px\")\r\n            .style(\"top\", this.options.sequence.top + \"px\")\r\n            .attr(\"height\", this.svgHeight)\r\n            .attr(\"width\", this.svgWidth)\r\n\r\n        this.mainSvgGroup = this.mainSvg.create(\"g\")\r\n            .setID(`${this.options.elementId}_svg_group`)\r\n\r\n        this.tooltip = this.bodyContainer.create(\"div\").attr(\"class\", \"linear-genome-tooltip\");\r\n\r\n    }\r\n\r\n    _initSvg() {\r\n        this.mainSvg\r\n            .on(\"mousemove\", () => {\r\n                event.preventDefault();\r\n                if (this.isDragging) {\r\n                    this._move(event.movementX / window.devicePixelRatio);\r\n                }\r\n            })\r\n            .on(\"mousewheel\", () => {\r\n                event.preventDefault();\r\n                if (event.deltaY > 0) {\r\n                    this._zoomOut();\r\n                } else if (event.deltaY < 0) {\r\n                    this._zoomIn();\r\n                }\r\n            })\r\n            .on(\"mousedown\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = true;\r\n                }\r\n            })\r\n            .on(\"mouseup\", () => {\r\n                event.preventDefault();\r\n                // 0: left button, 1: wheel, 2: right\r\n                if (event.button == 0) {\r\n                    this.isDragging = false;\r\n\r\n                }\r\n            })\r\n            .on(\"mouseout\", () => {\r\n                this.isDragging = false;\r\n            })\r\n            .on(\"dblclick\", () => {\r\n                this._resetZoom();\r\n            });\r\n\r\n    }\r\n    _clear() {\r\n        utils.selectAll(`#${this.options.elementId}_canvasContainer> canvas`).remove();\r\n        this.mainSvgGroup.remove();\r\n        this.mainSvgGroup = this.mainSvg.create(\"g\").setID(`${this.options.elementId}_svg_group`)\r\n    }\r\n\r\n    _drawLabels() {\r\n        const ordered_label = new Array(this.inputJson[\"genomes\"].length);\r\n        utils.each(this.inputJson[\"genomes\"], (genome) => {\r\n            ordered_label[genome.order] = genome;\r\n        })\r\n        utils.each(ordered_label, (genome) => {\r\n            this.labelDiv = this.labelContainer.create(\"div\")\r\n                .attr(\"data-id\", genome.name)\r\n                .style(\"font-size\", this.options.label.fontSize + \"px\")\r\n                .style(\"height\", this.options.seqHeight + \"px\")\r\n\r\n            const label_div = this.labelDiv.create(\"div\")\r\n                .style(\"margin\", this.options.margin + \"px 0 0 0\")\r\n                .style(\"height\", this.options.seqHeight + \"px\")\r\n                .setClass(\"d-flex align-items-center\")\r\n\r\n            label_div.create(\"span\")\r\n                .setClass(\"handle fas fa-expand-arrows-alt\")\r\n\r\n            label_div.elements[0].innerHTML += (\"&nbsp;\" + genome.name);\r\n        });\r\n    }\r\n\r\n    _drawCDSBlocks() {\r\n        this.seqWidthRatio = (this.svgWidth) / (this.end - this.start)\r\n        //console.log('this.seqWidthRatio:', this.seqWidthRatio);\r\n        //console.log(\"width: \" + (this.end - this.start));\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            //console.log('genome[\"genome_ID\"]:', genome[\"id\"]);\r\n            const rangeStart = parseInt(this.start * this.genomeSizeRate[i]);\r\n            const rangeEnd = parseInt(rangeStart + (this.end - this.start));\r\n            // if (rangeStart < 0) console.log('genome[\"genome_size\"]:', genome[\"genome_size\"]);\r\n            const y = (this.options.seqHeight + this.options.margin) * (genome.order) + this.options.sequence.genomeHeight + this.options.sequence.marginY;\r\n            //console.log('this.alignedSizeList[i]:', this.alignedSizeList[i]);\r\n            utils.each(genome[\"genes\"], (gene, counter) => {\r\n                //if (counter < 100000)\r\n                //   this._confirmRotations(gene, genome[\"flipped\"], genome[\"genome_size\"], genome[\"rotated_length\"]);\r\n                this._drawCDSBlock(gene, rangeStart, rangeEnd, y, this.alignedSizeList[i], genome[\"genome_size\"])\r\n            })\r\n        });\r\n    }\r\n\r\n    _drawCDSBlock(gene, rangeStart, rangeEnd, y, alignedSize, genome_size) {\r\n        let geneStart = gene[\"start_rotated\"] + alignedSize;\r\n        let geneEnd = gene[\"end_rotated\"] + alignedSize;\r\n\r\n        if (geneStart >= genome_size) geneStart -= genome_size\r\n        if (geneStart < 0) geneStart += genome_size\r\n        if (geneEnd >= genome_size) geneEnd -= genome_size\r\n        if (geneEnd < 0) geneEnd += genome_size\r\n\r\n        let startPoint = 0\r\n        let endPoint = 0\r\n        // TODO fix\r\n        if (geneStart > geneEnd || geneEnd - geneStart > 100000) {\r\n            //console.log('large');\r\n            return;\r\n        }\r\n        // normal\r\n        if (geneStart > rangeStart && geneEnd < rangeEnd) {\r\n            startPoint = this._convertGpositionToPixel(geneStart - rangeStart);\r\n            endPoint = this._convertGpositionToPixel(geneEnd - rangeStart);\r\n        }\r\n        // left edge\r\n        else if (geneStart < rangeStart && geneEnd > rangeStart) {\r\n            startPoint = 0;\r\n            endPoint = this._convertGpositionToPixel(geneEnd - rangeStart);\r\n        }\r\n        // right edge\r\n        else if (geneStart < rangeEnd && geneEnd > rangeEnd) {\r\n            startPoint = this._convertGpositionToPixel(geneStart - rangeStart);\r\n            endPoint = this.width - this.options.sequence.right\r\n        } else {\r\n            return;\r\n        }\r\n        let w = endPoint - startPoint;\r\n        if (w < 0) w = 10;\r\n        if (gene.strand === -1) y += this.options.sequence.cdsHeight;\r\n        this._drawSvg(startPoint, y, w, this.options.sequence.cdsHeight, gene, genome_size, alignedSize);\r\n    }\r\n    _convertGpositionToPixel(gposition) {\r\n        return gposition * this.seqWidthRatio;\r\n    }\r\n\r\n    _drawSvg(x, y, w, h, gene, genome_size, aligned_size) {\r\n        const col = utils.COLER_ARR[gene.angle];\r\n        const rect = this.mainSvgGroup.create(\"rect\")\r\n            .attr(\"x\", x)\r\n            .attr(\"y\", y)\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", h)\r\n            .attr(\"fill\", col)\r\n\r\n        rect\r\n            .on(\"mouseover\", () => {\r\n                this.tooltip\r\n                    .style(\"visibility\", \"visible\")\r\n                    .style(\"top\", (y - this.options.tooltip.height) + \"px\")\r\n                    .style(\"left\", this.options.label.width + this.options.label.left + x + \"px\")\r\n                    .innerHTML(\"<p>name : \" + gene.locusTag + \"</p><p>id : \" + gene.consensusId + \"</p>\");\r\n\r\n            })\r\n            .on(\"mousemove\", () => {\r\n                this.tooltip\r\n                    .style(\"top\", (y - this.options.tooltip.height) + \"px\")\r\n                    .style(\"left\", this.mainSvg.mouse[0] + this.options.label.width + this.options.label.left + \"px\")\r\n\r\n            })\r\n            .on(\"mouseout\", () => {\r\n                this.tooltip\r\n                    .style(\"visibility\", \"hidden\")\r\n            })\r\n            .on(\"mousedown\", () => {\r\n                if (gene.consensusId != \"-1\") {\r\n                    this._setBaseGenomeSizeRate(genome_size);\r\n                    utils.json(consensusIDPositionAPI + gene.consensusId).then((res) => {\r\n                        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n                            if (genome.id in res) {\r\n                                this.alignedSizeList[i] = (gene[\"start_rotated\"] + aligned_size) - this._getRotateGenomicStartPosition(genome, res[genome.id]);\r\n                            }\r\n                        })\r\n                        this.redrawCDSs();\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    _setBaseGenomeSizeRate(genomeSize) {\r\n        if (this.baseGenomeSize === this.inputJson[\"consensus_genome_size\"]) {\r\n            this.baseGenomeSize = genomeSize;\r\n            this.genomeSizeRate = [];\r\n            for (let i = 0; i < this.numGenomes; i++) {\r\n                this.genomeSizeRate.push(genomeSize / this.inputJson[\"consensus_genome_size\"]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getRotateGenomicStartPosition(genome, gene) {\r\n        const flipped = genome[\"flipped\"];\r\n        const rotated_length = genome[\"rotated_length\"];\r\n        const genome_size = genome[\"genome_size\"];\r\n        if (flipped === 0) {\r\n            let rotated = gene[\"start\"] + rotated_length\r\n            if (rotated >= genome_size) {\r\n                rotated -= genome_size\r\n            }\r\n            return rotated;\r\n        } else if (flipped === 1) {\r\n            let rotated = genome_size - gene[\"end\"] + rotated_length\r\n            if (rotated < 0) {\r\n                rotated += genome_size\r\n            }\r\n            if (rotated >= genome_size) {\r\n                rotated -= genome_size\r\n            }\r\n            return rotated;\r\n        }\r\n    }\r\n\r\n    _getOriginalGenomicStartPosition(genome, targetRegion) {\r\n        const flipped = genome[\"flipped\"];\r\n        const rotated_length = genome[\"rotated_length\"];\r\n        const genome_size = genome[\"genome_size\"];\r\n        if (flipped === 0) {\r\n            let rotated = targetRegion[\"start\"] - rotated_length;\r\n            if (rotated >= genome_size) {\r\n                rotated -= genome_size\r\n            }\r\n            if (rotated < 0) {\r\n                rotated += genome_size\r\n            }\r\n            return rotated;\r\n        } else if (flipped === 1) {\r\n            let rotated = genome_size - targetRegion[\"end\"] + rotated_length;\r\n            if (rotated < 0) {\r\n                rotated += genome_size\r\n            }\r\n            if (rotated >= genome_size) {\r\n                rotated -= genome_size\r\n            }\r\n            return rotated;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    _drawGenomicSequences() {\r\n        const regionSize = (this.end - this.start);\r\n        console.log('regionSize:', regionSize);\r\n        if (this.seqWidthRatio > 1) {\r\n            const postData = {\r\n                seqs: []\r\n            };\r\n            utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n                const targetRegion = {\r\n                    start: parseInt((this.start) * this.genomeSizeRate[i] - this.alignedSizeList[i]),\r\n                    end: parseInt((this.start) * this.genomeSizeRate[i] + regionSize - this.alignedSizeList[i])\r\n                };\r\n                const start = this._getOriginalGenomicStartPosition(genome, targetRegion);\r\n                // console.log('start:', start);\r\n                postData[\"seqs\"].push({\r\n                    genome_ID: genome.id,\r\n                    start: start,\r\n                    end: start + regionSize,\r\n                })\r\n            });\r\n            console.log('postData[\"seqs\"]:', postData[\"seqs\"]);\r\n            utils.json(getGenomeRangeAPI, param(postData)).then((res) => {\r\n                utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n                    //                    if (genome[\"flipped\"] === 0) {\r\n                    // if (genome[\"rotated_length\"] == 0) {\r\n                    const diff = postData[\"seqs\"][i].start - res[genome.id].start;\r\n                    let seq = res[genome.id].seq.substr(diff, regionSize);\r\n                    if (genome[\"flipped\"] == 1) {\r\n                        seq = this._reverseComplement(seq);\r\n                    }\r\n                    if (genome.name == \"BM012B\") {\r\n                        console.log('res:', res);\r\n                        console.log(diff);\r\n                        console.log(postData[\"seqs\"][i].start + \" \" + res[genome.id].start);\r\n                        console.log(genome.name + \" \" + postData[\"seqs\"][i].start + \"-\" + postData[\"seqs\"][i].end);\r\n                        console.log(genome.rotated_length)\r\n                        console.log(genome.genome_size - postData[\"seqs\"][i].start - genome.rotated_length)\r\n                        console.log(\"start: \" + (this.start * this.genomeSizeRate[i] - this.alignedSizeList[i]));\r\n                        console.log(res[genome.id].start);\r\n\r\n                    }\r\n                    this._drawGenomicSequence(genome, i, seq);\r\n                    //}\r\n                    //                  }\r\n                });\r\n            });\r\n        } else {\r\n            utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n                this._drawGenomicSequence(genome, i);\r\n            });\r\n        }\r\n    }\r\n\r\n    _reverseComplement(seq) {\r\n        let seq2 = seq.replace(/A/g, \"Z\").replace(/T/g, \"A\").replace(/Z/g, \"T\").replace(/C/g, \"Z\").replace(/G/g, \"C\").replace(/Z/g, \"G\");\r\n        return seq2.split(\"\").reverse();\r\n    }\r\n\r\n    _drawGenomicSequence(genome, i, genomicSeq) {\r\n        const y = (this.options.seqHeight + this.options.margin) * (genome.order) + this.options.sequence.top;\r\n        let genenome_canvas = this.canvasContainer.create(\"canvas\")\r\n            .setID(`${this.options.elementId}_canvas_${i}`)\r\n            .style(\"position\", \"absolute\")\r\n            .style(\"left\", (this.options.label.width + this.options.label.left) + \"px\")\r\n            .style(\"top\", y + \"px\")\r\n            .attr(\"height\", this.options.sequence.genomeHeight)\r\n            .attr(\"width\", this.svgWidth);\r\n\r\n        let genome_browser_ctx = genenome_canvas.elements[0].getContext(\"2d\");\r\n        let yStart = this.options.sequence.genomeHeight / 2;\r\n\r\n        if (this.seqWidthRatio > 1) {\r\n            //console.log(this.seqWidthRatio)\r\n            if (this.seqWidthRatio > 10) {\r\n                for (let i = 0; i < genomicSeq.length; i++) {\r\n                    let col = utils.NUCLEOTIDE_COLOR[genomicSeq[i]];\r\n                    genome_browser_ctx.beginPath();\r\n                    genome_browser_ctx.font = this.options.sequence.fontSize + \"px Arial serif\";\r\n                    genome_browser_ctx.moveTo(i * this.seqWidthRatio, yStart);\r\n                    genome_browser_ctx.lineTo((i + 1) * this.seqWidthRatio, yStart);\r\n                    genome_browser_ctx.lineWidth = this.options.sequence.genomeHeight;\r\n                    genome_browser_ctx.strokeStyle = col;\r\n                    genome_browser_ctx.fillStyle = \"black\";\r\n                    genome_browser_ctx.textAlign = \"center\";\r\n                    genome_browser_ctx.stroke();\r\n                    genome_browser_ctx.fillText(genomicSeq[i], (i * this.seqWidthRatio) + this.seqWidthRatio / 2, yStart + 5);\r\n                }\r\n            } else {\r\n                for (let i = 0; i < genomicSeq.length; i++) {\r\n                    let col = utils.NUCLEOTIDE_COLOR[genomicSeq[i]];\r\n                    genome_browser_ctx.beginPath();\r\n                    genome_browser_ctx.font = this.options.sequence.fontSize + \"px Arial serif\";\r\n                    genome_browser_ctx.moveTo(i * this.seqWidthRatio, yStart);\r\n                    genome_browser_ctx.lineTo((i + 1) * this.seqWidthRatio, yStart);\r\n                    genome_browser_ctx.lineWidth = this.options.sequence.genomeHeight;\r\n                    genome_browser_ctx.strokeStyle = col;\r\n                    genome_browser_ctx.fillStyle = \"black\"\r\n                    genome_browser_ctx.stroke();\r\n                }\r\n            }\r\n        } else {\r\n            genome_browser_ctx.beginPath();\r\n            genome_browser_ctx.font = this.options.sequence.fontSize + \"px Arial serif\";\r\n            genome_browser_ctx.moveTo(0, yStart);\r\n            genome_browser_ctx.lineTo(this.svgWidth, yStart);\r\n            genome_browser_ctx.lineWidth = this.options.sequence.genomeHeight;\r\n            genome_browser_ctx.strokeStyle = \"rgb(150, 150, 150)\";\r\n            genome_browser_ctx.fillStyle = \"black\"\r\n            genome_browser_ctx.stroke();\r\n            genome_browser_ctx.textAlign = \"center\";\r\n            genome_browser_ctx.fillText(\"Genome Sequence\", this.svgWidth / 2, yStart + 5);\r\n        }\r\n    }\r\n\r\n    _getZoomSize() {\r\n        if (this.seqWidthRatio < 0.1) {\r\n            return this.options.zoom.xl;\r\n        }\r\n        if (this.seqWidthRatio < 0.5) {\r\n            return this.options.zoom.lg;\r\n        }\r\n        if (this.seqWidthRatio < 1) {\r\n            return this.options.zoom.md;\r\n        }\r\n        if (this.seqWidthRatio < 5) {\r\n            return this.options.zoom.sm;\r\n        }\r\n        return this.options.zoom.xs;\r\n    }\r\n\r\n    // zoom functions\r\n    _zoomIn() {\r\n        let zoomSize = this._getZoomSize();\r\n        if (this.end - this.start > 100) {\r\n            this.start += zoomSize;\r\n            this.end -= zoomSize;\r\n            this.redrawCDSs();\r\n        } else if (this.end - this.start > 10) {\r\n            this.start += 2;\r\n            this.end -= 2;\r\n            this.redrawCDSs();\r\n            /*        } else if (this.end - this.start > 2) {\r\n                        this.start += 1;\r\n                        this.end -= 1;\r\n                        this.redrawCDSs();\r\n            */\r\n        }\r\n    }\r\n\r\n    _zoomOut() {\r\n        if (this.end - this.start < 30) {\r\n            this.start -= 2;\r\n            this.end += 2;\r\n\r\n        } else {\r\n            let zoomSize = this._getZoomSize();\r\n            this.start -= zoomSize;\r\n            this.end += zoomSize;\r\n        }\r\n        this.redrawCDSs();\r\n    }\r\n\r\n    _move(x) {\r\n        if (x === 0) return;\r\n        let moveSize = x / (this.seqWidthRatio);\r\n        this.start -= moveSize;\r\n        this.end -= moveSize;\r\n        if (parseInt(this.start + 0.5) !== parseInt(this.preStart + 0.5) ||\r\n            parseInt(this.end - this.start + 0.5) !== parseInt(this.preEnd - this.preStart + 0.5)) {\r\n            this.preStart = this.start;\r\n            this.preEnd = this.end;\r\n\r\n            this.redrawCDSs();\r\n        }\r\n    }\r\n\r\n    _resetZoom() {\r\n        this.preStart = this.start;\r\n        this.preEnd = this.end;\r\n        this.start = 0;\r\n        this.end = this.size;\r\n        this.redrawCDSs();\r\n    }\r\n\r\n\r\n\r\n    _test_db_access() {\r\n        const data = {\r\n            seqs: []\r\n        }\r\n\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            data[\"seqs\"].push({\r\n                genome_ID: genome.id,\r\n                start: 100,\r\n                end: 100\r\n            })\r\n        });\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            data[\"seqs\"].push({\r\n                genome_ID: genome.id,\r\n                start: 100,\r\n                end: 100\r\n            })\r\n        });\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            data[\"seqs\"].push({\r\n                genome_ID: genome.id,\r\n                start: 100,\r\n                end: 100\r\n            })\r\n        });\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            data[\"seqs\"].push({\r\n                genome_ID: genome.id,\r\n                start: 100,\r\n                end: 100\r\n            })\r\n        });\r\n        utils.each(this.inputJson[\"genomes\"], (genome, i) => {\r\n            data[\"seqs\"].push({\r\n                genome_ID: genome.id,\r\n                start: 100,\r\n                end: 100\r\n            })\r\n        });\r\n\r\n        const start = performance.now()\r\n        test(\"http://127.0.0.1:8000/hp72/api/genome/test\", param(data)).then((res) => {\r\n            console.log(res)\r\n            console.log(\"performance: \" + (performance.now() - start))\r\n        });\r\n    }\r\n\r\n}"],"names":["key","toString","Object","prototype","hasOwnProperty","has","obj","path","call","nativeKeys","keys","MAX_ARRAY_INDEX","Math","pow","getLength","optimizeCb","func","context","argCount","value","index","collection","console","log","accumulator","apply","arguments","getKeys","type","isObject","push","each","iteratee","i","length","isArrayLike","group","behavior","partition","result","groupBy","countBy","indexBy","seqStat","seqs","results","len","init","seq","val","seqArr","split","isConservedRegoin","conserved","conservedRegionLength","counter","calcGapRate","numSeq","res","calcShannonEntropy","s","v","log2","filterAndSortEntroy","entropyArr","buf","name","sort","a","b","getTrueArr","resourceArr","booleanArr","getAllSequenceAsFasta","sequenceObj","ret","join","getConservedRegionAsFasta","Selector","elements","isSvgChild","mouse","eventType","callback","capture","_","this","el","addEventListener","rect","getBoundingClientRect","_this","event","clientX","left","clientLeft","clientY","top","clientTop","elementName","_this2","newEle","document","createElementNS","appendChild","createElement","parentNode","removeChild","element","stylName","styleValue","style","setProperty","attrName","attrValue","setAttribute","className","attr","idName","text","textContent","innerHTML","selectID","getElementById","select","querySelector","selectAll","querySelectorAll","json","input","fetch","then","response","ok","Error","status","statusText","TAYLOR_COLOR","A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","S","T","W","Y","V","B","X","Z","hsvToRgb","Hp","abs","m","floor","COLER_ARR","k","j","getColorPallet","getColors","stepSize","PROTEIN_COL_V1","NUCLEOTIDE_COLOR","U","generateLink","fileName","dataPath","link","download","href","exportText","textString","blob","Blob","url","window","URL","createObjectURL","click","exportJson","replacer","indent","JSON","stringify","Modal","x","y","layerX","layerY","width","height","modal_class","box","utils","on","preventDefault","create","setClass","pageX","pageY","dataTransfer","setDragImage","size","right","bottom","font","fontSize","options","id","setSize","seqHeight","isGrouping","colorScheme","col","header","enable","seqLogo","nonGapRate","baseColor","highColor","th","label","sequence","topMargin","bottomMargin","scaleBar","deg90","PI","setLineWidth","ctx","lineWidth","setTextAlign","align","textAlign","setFillStyle","fStyle","fillStyle","drawLine","startX","endX","startY","endY","strokeStyle","beginPath","moveTo","lineTo","stroke","drawArc","r","startRad","endRad","angle","color","arc","drawTxt","fillText","clear","clearRect","AlignmentPosition","start","end","preStart","preEnd","Alignment","opt","mainCanvas","isDragging","container","inputJson","canvasHeight","headerContainer","bodyContainer","labelContainer","labelDiv","canvasContainer","alignmentPosition","baseWidth","seqLength","orderedAlignments","highlightedIndicies","isConservedRegionMode","conservedRegionBooleanArr","headerCanvas","headerCtx","gapRate","shannonEntropyArr","elementID","html","clientWidth","clientHeight","dicArr","_group","arr","count","names","getGroup","order","Array","alignment","_DOMcreate","getContext","_initHeader","_drawSequenceLabel","drawSequences","update","targetSeq","slice","parseInt","substr","setID","_this3","_move","movementX","devicePixelRatio","deltaY","_zoomOut","_zoomIn","button","_resetZoom","sortable","sortArr","toArray","indexOf","drawer","seqWidth","_this4","_drawSequence","_drawHighlightRect","_drawScaleBar","_drawHeader","_this5","_this6","label_p","_this7","strokeRect","e","numBreaks","_drawNonGrapRate","_drawSeqLogo","sStyle","rotate","maxVal","logoHeight","baseHeight","wSize","entropies","site","_this8","preHeight","replace","hRate","transform","setTransform","bottomLineY","_this9","zoomSize","moveSize","elementId","outerRadius","innnerRadius","ringMargin","highlighterEnable","CircularGenomeBrowser","halfX","halfY","numGenomes","maxRadius","ringSize","highlightCanvas","highlighter","Highlighter","drawCircularGenomes","_drawKaryotype","_drawCircularGenomes","_init_radius","genomes","l","genes","convertDeg2Rad","deg","canvas","isHighlightLock","updateFunction","zoomStart","zoomEnd","_init","closePath","fill","restore","cos","sin","xy","_getAngleFromMousePosition","showArc","tan","atan","margin","marginY","cdsHeight","genomeHeight","tooltip","zoom","xs","sm","md","lg","xl","SeqContainer","param","data","method","mode","cache","credentials","headers","redirect","referrer","body","LinearGenomeBrowser","seqWidthRatio","alignedSizeList","genomeSizeRate","baseGenomeSize","resetAlignment","consensus_genome_size","redrawCDSs","svgWidth","svgHeight","genome","_initSvg","drawLinearGenomes","_clear","_drawLabels","_drawCDSBlocks","_drawGenomicSequences","mainSvg","mainSvgGroup","remove","ordered_label","label_div","rangeStart","rangeEnd","gene","_drawCDSBlock","alignedSize","genome_size","geneStart","geneEnd","startPoint","endPoint","_convertGpositionToPixel","w","strand","_drawSvg","gposition","h","aligned_size","locusTag","consensusId","_setBaseGenomeSizeRate","_getRotateGenomicStartPosition","genomeSize","flipped","rotated_length","rotated","targetRegion","regionSize","postData","_getOriginalGenomicStartPosition","genome_ID","diff","_reverseComplement","_drawGenomicSequence","reverse","genomicSeq","genome_browser_ctx","yStart","_getZoomSize","performance","now","svgElement","svgString","svg","ActiveXObject","xml","XMLSerializer","serializeToString","getElementsByClassName"],"mappings":"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"}